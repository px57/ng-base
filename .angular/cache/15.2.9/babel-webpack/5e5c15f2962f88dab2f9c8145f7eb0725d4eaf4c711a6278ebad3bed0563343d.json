{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../components/switch-modal/switch-modal.component\";\nexport class SwitchModalService {\n  /**\n   * @description:\n   */\n  constructor(router, switch_modal_component) {\n    this.router = router;\n    this.switch_modal_component = switch_modal_component;\n  }\n  /*\n  * @description: Recuperer le nom dans l'url.\n  */\n  get_switch_name() {\n    const url = new URL(window.location.href);\n    return url.searchParams.get(`switch`);\n  }\n  /*\n  * @description: Get the good params.\n  */\n  /*\n  * @description:\n  */\n  open_modal(name, params = {}) {\n    if (name !== undefined) {\n      params.switch = name;\n    }\n    this.router.navigate([], {\n      queryParams: params\n    });\n  }\n  /*\n  * @description:\n  */\n  close(params = {}) {\n    this.open_modal(undefined, params);\n  }\n  /*\n  * @description:\n  */\n  open_help(hash) {\n    this.open_modal(`info_curbapp_manifest_create`);\n  }\n  /**\n   * @description:\n   */\n  clickWhiteContainer($event) {\n    $event.stopPropagation();\n  }\n  /**\n   * @description:\n   */\n  has_in_switchmodal() {\n    return this.get_switch_name() !== null;\n  }\n  /**\n   * @description:\n   */\n  set_config(config) {}\n  /**\n   * @description:\n   */\n  set_config_list(config_list) {}\n  /**\n   * @description:\n   */\n  get_config(config_name) {\n    return undefined;\n  }\n}\n_class = SwitchModalService;\n_class.ɵfac = function SwitchModalService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.SwitchModalComponent));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,kBAAkB;EAE7B;;;EAIAC,YACSC,MAAc,EACbC,sBAA4C;IAD7C,WAAM,GAAND,MAAM;IACL,2BAAsB,GAAtBC,sBAAsB;EAGhC;EAEA;;;EAGOC,eAAe;IACpB,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;IACzC,OAAOJ,GAAG,CAACK,YAAY,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvC;EAEA;;;EAKA;;;EAGOC,UAAU,CAACC,IAAwB,EAAEC,SAAc,EAAE;IAC1D,IAAID,IAAI,KAAKE,SAAS,EAAE;MACtBD,MAAM,CAACE,MAAM,GAAGH,IAAI;;IAGtB,IAAI,CAACX,MAAM,CAACe,QAAQ,CAClB,EAAE,EACF;MACEC,WAAW,EAAEJ;KACd,CACF;EACH;EAEA;;;EAGOK,KAAK,CAACL,SAAc,EAAE;IAC3B,IAAI,CAACF,UAAU,CAACG,SAAS,EAAED,MAAM,CAAC;EACpC;EAEA;;;EAGOM,SAAS,CAACC,IAAY;IACzB,IAAI,CAACT,UAAU,CAAC,8BAA8B,CAAC;EACnD;EAEA;;;EAGOU,mBAAmB,CAACC,MAAW;IACpCA,MAAM,CAACC,eAAe,EAAE;EAC1B;EAEA;;;EAGOC,kBAAkB;IACvB,OAAO,IAAI,CAACrB,eAAe,EAAE,KAAK,IAAI;EACxC;EAGA;;;EAGOsB,UAAU,CAACC,MAAmB,GACrC;EAEA;;;EAGOC,eAAe,CAACC,WAA+B,GAEtD;EAEA;;;EAGOC,UAAU,CAACC,WAAmB;IACnC,OAAOhB,SAAS;EAClB;;SAzFWf,kBAAkB;;mBAAlBA,MAAkB;AAAA;;SAAlBA,MAAkB;EAAAgC,SAAlBhC,MAAkB;EAAAiC,YAFjB;AAAM","names":["SwitchModalService","constructor","router","switch_modal_component","get_switch_name","url","URL","window","location","href","searchParams","get","open_modal","name","params","undefined","switch","navigate","queryParams","close","open_help","hash","clickWhiteContainer","$event","stopPropagation","has_in_switchmodal","set_config","config","set_config_list","config_list","get_config","config_name","factory","providedIn"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/modal/services/switch-modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SwitchModalComponent } from '../components/switch-modal/switch-modal.component';\nimport { ModalConfig } from '../types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwitchModalService {\n\n  /**\n   * @description:   \n   */\n\n  constructor(\n    public router: Router,\n    private switch_modal_component: SwitchModalComponent,\n  ) {\n\n  }\n\n  /*\n  * @description: Recuperer le nom dans l'url.\n  */\n  public get_switch_name() {\n    const url = new URL(window.location.href);\n    return url.searchParams.get(`switch`);\n  }\n\n  /*\n  * @description: Get the good params.\n  */\n\n\n  /*\n  * @description:\n  */\n  public open_modal(name: string | undefined, params: any = {}) {\n    if (name !== undefined) {\n      params.switch = name;\n    }\n\n    this.router.navigate(\n      [],\n      {\n        queryParams: params\n      }\n    );\n  }\n\n  /*\n  * @description:\n  */\n  public close(params: any = {}) {\n    this.open_modal(undefined, params);\n  }\n\n  /*\n  * @description:\n  */\n  public open_help(hash: string): void {\n      this.open_modal(`info_curbapp_manifest_create`);\n  }\n\n  /**\n   * @description:\n   */\n  public clickWhiteContainer($event: any): void {\n    $event.stopPropagation();\n  }\n\n  /**\n   * @description:\n   */\n  public has_in_switchmodal(): boolean {\n    return this.get_switch_name() !== null;\n  }\n\n\n  /**\n   * @description:\n   */\n  public set_config(config: ModalConfig): void {\n  }\n\n  /**\n   * @description: \n   */\n  public set_config_list(config_list: Array<ModalConfig>): void {\n    \n  }\n\n  /**\n   * @description: \n   */\n  public get_config(config_name: string): ModalConfig | undefined {\n    return undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}