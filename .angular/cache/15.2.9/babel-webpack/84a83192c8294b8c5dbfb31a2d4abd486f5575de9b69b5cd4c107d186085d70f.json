{"ast":null,"code":"var _class;\nimport { ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"container123\"];\nexport class ComponentInjectorComponent {\n  /**\n   * @description:\n   */\n  constructor(resolver) {\n    this.resolver = resolver;\n  }\n  /**\n   * @description:\n   */\n  ngOnInit() {\n    this.container123.createComponent(this.component);\n  }\n  /**\n   * @description:\n   */\n  ngAfterViewInit() {\n    // this.loadComponent();\n  }\n  /**\n   * @description:\n   */\n  ngOnChanges() {\n    // this.loadComponent();\n  }\n}\n_class = ComponentInjectorComponent;\n_class.ɵfac = function ComponentInjectorComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"component-injector\"]],\n  viewQuery: function ComponentInjectorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container123 = _t.first);\n    }\n  },\n  inputs: {\n    component: \"component\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"container123\", \"\"]],\n  template: function ComponentInjectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"template\", null, 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAMEA,gBAAgB,QAMX,eAAe;;;AAStB,OAAM,MAAOC,0BAA0B;EAUrC;;;EAGAC,YACUC,QAAkC;IAAlC,aAAQ,GAARA,QAAQ;EAGlB;EAEA;;;EAGOC,QAAQ;IACb,IAAI,CAACC,YAAY,CAACC,eAAe,CAAM,IAAI,CAACC,SAAS,CAAC;EACxD;EAEA;;;EAGOC,eAAe;IACpB;EAAA;EAGF;;;EAGOC,WAAW;IAChB;EAAA;;SArCSR,0BAA0B;;mBAA1BA,MAA0B;AAAA;;QAA1BA,MAA0B;EAAAS;EAAAC;IAAA;6BAGFX,gBAAgB;;;;;;;;;;;;;;;;MCzBrDY,oCAAmC","names":["ViewContainerRef","ComponentInjectorComponent","constructor","resolver","ngOnInit","container123","createComponent","component","ngAfterViewInit","ngOnChanges","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/tools/components/component-injector/component-injector.component.ts","/var/projects/gtender/client2/src/modules/tools/components/component-injector/component-injector.component.html"],"sourcesContent":["\nimport {\n  Component,\n  Input,\n  OnInit,\n  ComponentFactoryResolver, Type,\n  ViewChild,\n  ViewContainerRef,\n  AfterViewInit,\n  EventEmitter,\n  Output,\n  OnChanges,\n  Type,\n} from '@angular/core';\nimport { ComponentRef } from '@angular/core';\n\n\n@Component({\n  selector: 'component-injector',\n  templateUrl: './component-injector.component.html',\n  styleUrls: ['./component-injector.component.scss']\n})\nexport class ComponentInjectorComponent implements OnInit, AfterViewInit, OnChanges {\n\n\n  @ViewChild(\"container123\", { read: ViewContainerRef }) container123!: ViewContainerRef;\n\n  public componentRef!: ComponentRef<any>\n\n  @Input()\n  public component: any;\n\n  /**\n   * @description:\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n  ) { \n    \n  }\n\n  /**\n   * @description:\n   */\n  public ngOnInit(): void {\n    this.container123.createComponent<any>(this.component);\n  }\n\n  /**\n   * @description: \n   */\n  public ngAfterViewInit(): void {\n    // this.loadComponent();\n  }\n\n  /**\n   * @description:\n   */\n  public ngOnChanges(): void {\n    // this.loadComponent();\n  }\n}\n\n","<template #container123></template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}