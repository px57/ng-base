{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Injector } from '@angular/core';\nlet SwitchModalComponent = class SwitchModalComponent {\n  constructor(injector, route, switchModalService) {\n    this.injector = injector;\n    this.route = route;\n    this.switchModalService = switchModalService;\n    /**\n     * @description:\n     */\n    this.switch = ``;\n    /**\n     * @description:\n     */\n    this.myInjector = undefined;\n    /**\n     * @description:\n     */\n    this.myContent = {\n      SigninSuccess: data => {\n        alert('salut grosse salope.');\n      }\n    };\n    /**\n     * @description:\n     */\n    this.config = undefined;\n    /**\n     * @description:\n     */\n    this.myInputs = {\n      'label': 'Complete'\n    };\n    this.myInjector = Injector.create({\n      providers: [{\n        provide: 'data',\n        useValue: 'Données passées au composant dynamique'\n      }],\n      parent: this.injector\n    });\n    this.myContent = {\n      SigninSuccess: data => {\n        alert('salut grosse salope.');\n      }\n    };\n  }\n  /**\n   * @description:\n   */\n  ngOnInit() {\n    this.bindQueryParams();\n    console.log(this);\n  }\n  /**\n   * @description:\n   */\n  bindQueryParams() {\n    this.route.queryParams.subscribe(response => {\n      this.updateSwitch(response.switch);\n    });\n    const urlParams = new URLSearchParams(window.location.search);\n    let switch_name = urlParams.get('switch');\n    if (switch_name === null) {\n      return;\n    }\n    this.updateSwitch(switch_name);\n  }\n  /**\n   * @description:\n   */\n  updateSwitch(switch_name) {\n    if (switch_name === undefined) {\n      this.switch = \"\";\n      this.config = undefined;\n      return;\n    }\n    this.switch = switch_name;\n    this.config = this.switchModalService.get_config(switch_name);\n    this.myInjector = Injector.create({\n      providers: [{\n        provide: 'data',\n        useValue: 'Données passées au composant dynamique'\n      }],\n      parent: this.injector\n    });\n    this.myContent = {\n      SigninSuccess: data => {\n        alert('salut grosse salope.');\n      }\n    };\n    console.log(this.myContent);\n  }\n  /*\n   * @description:\n   */\n  openedLink(switchKey) {\n    return this.switch === switchKey;\n  }\n  /**\n   * @description:\n   */\n  close() {\n    this.switch = \"\";\n  }\n  /**\n   * @description:\n   */\n  clickToViewContainer($event) {\n    $event.stopPropagation();\n  }\n  /**\n   * @description:\n   */\n  clickToBackgroundContainer() {\n    if (this.component !== undefined && this.component.switchModal__eventClose !== undefined) {\n      if (!this.component.switchModal__eventClose()) {\n        return;\n      }\n    }\n    setTimeout(() => {\n      this.switchModalService.close();\n    }, 200);\n  }\n  /**\n   * @description:\n   */\n  init($event) {\n    this.component = $event;\n  }\n};\nSwitchModalComponent = __decorate([Component({\n  selector: 'app-switch-modal',\n  templateUrl: './switch-modal.component.html',\n  styleUrls: ['./switch-modal.component.scss']\n})], SwitchModalComponent);\nexport { SwitchModalComponent };","map":{"version":3,"mappings":"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","names":["Component","Injector","SwitchModalComponent","constructor","injector","route","switchModalService","undefined","SigninSuccess","data","alert","myInjector","create","providers","provide","useValue","parent","myContent","ngOnInit","bindQueryParams","console","log","queryParams","subscribe","response","updateSwitch","switch","urlParams","URLSearchParams","window","location","search","switch_name","get","config","get_config","openedLink","switchKey","close","clickToViewContainer","$event","stopPropagation","clickToBackgroundContainer","component","switchModal__eventClose","setTimeout","init","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/modal/components/switch-modal/switch-modal.component.ts"],"sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { Route, ActivatedRoute } from '@angular/router';\nimport { SwitchModalService } from '../../services/switch-modal.service';\nimport { ModalConfig } from '../../types';\n\n@Component({\n  selector: 'app-switch-modal',\n  templateUrl: './switch-modal.component.html',\n  styleUrls: ['./switch-modal.component.scss']\n})\nexport class SwitchModalComponent {\n  /**\n   * @description:\n   */\n  public switch: string = ``;\n\n  /**\n   * @description:\n   */\n  public component: any;\n\n  /**\n   * @description: \n   */\n  public myInjector: Injector | undefined = undefined;\n\n  /**\n   * @description:\n   */\n  public myContent: any = {\n    SigninSuccess: (data: string) => {\n      alert ('salut grosse salope.');\n    }\n  };\n\n  /**\n   * @description: \n   */\n  public config: ModalConfig | undefined = undefined;\n\n  /**\n   * @description: \n   */\n  public  myInputs = {'label': 'Complete'};\n\n  constructor(\n    private injector: Injector,\n    private route: ActivatedRoute,\n    private switchModalService: SwitchModalService,\n  ) {\n    this.myInjector = Injector.create({\n      providers: [{ \n        provide: 'data', \n        useValue: 'Données passées au composant dynamique' \n      }],\n      parent: this.injector\n    });\n    this.myContent = {\n      SigninSuccess: (data: string) => {\n        alert ('salut grosse salope.');\n      }\n    };   \n  }\n\n  /**\n   * @description:\n   */\n  public ngOnInit() {\n    this.bindQueryParams();\n    console.log(this);\n  }\n\n  /**\n   * @description:  \n   */\n  private bindQueryParams() {\n    this.route.queryParams.subscribe((response: any) => {\n      this.updateSwitch(response.switch);\n    });\n    const urlParams = new URLSearchParams(window.location.search);\n    let switch_name = urlParams.get('switch');\n    if (switch_name === null) {\n      return;\n    }\n    this.updateSwitch(switch_name);\n  }\n\n  /**\n   * @description: \n   */\n  private updateSwitch(switch_name: string | undefined ): void {\n    if (switch_name === undefined) {\n      this.switch = \"\";\n      this.config = undefined;\n      return;\n    }\n    this.switch = switch_name;\n    this.config = this.switchModalService.get_config(switch_name);\n    this.myInjector = Injector.create({\n      providers: [{ \n        provide: 'data', \n        useValue: 'Données passées au composant dynamique' \n      }],\n      parent: this.injector\n    });\n    this.myContent = {\n      SigninSuccess: (data: string) => {\n        alert ('salut grosse salope.');\n      }\n    };\n    console.log(this.myContent);\n  }\n\n  /*\n   * @description:\n   */\n  public openedLink(switchKey: string): boolean {\n    return this.switch === switchKey;\n  }\n\n  /**\n   * @description:\n   */\n  public close(): void {\n    this.switch = \"\";\n  }\n\n  /**\n   * @description:\n   */\n  public clickToViewContainer($event: any): void {\n    $event.stopPropagation();\n  }\n\n  /**\n   * @description:\n   */\n  public clickToBackgroundContainer(): void {\n    if (\n      this.component !== undefined &&\n      this.component.switchModal__eventClose !== undefined\n    ) {\n      if (!this.component.switchModal__eventClose()) {\n        return;\n      }\n    }\n    setTimeout(() => {\n      this.switchModalService.close();\n    }, 200);\n  }\n\n  /**\n   * @description:\n   */\n  public init($event: any): void {\n    this.component = $event;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}