{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n;\nexport class FileService {\n  /*\n  * @description:\n  */\n  constructor(HttpClient) {\n    this.HttpClient = HttpClient;\n    /**\n     * @description:\n     */\n    this.stream = new Subject();\n    /**\n     * @description:\n     */\n    this.upload_file_type_mime = {\n      image: ['image/png', 'image/gif', 'image/jpeg', 'image/webp'],\n      video: ['video/x-matroska', 'video/x-ms-wmv', 'video/x-ms-asf', 'video/x-msvideo', 'video/quicktime', 'video/webm', 'audio/mpeg', 'video/mp4']\n    };\n    /**\n     * @description:\n     */\n    this.bad_file_type_mime_message = {\n      image: `Incorrect format, try again with .jpg, .png, .gif only`,\n      video: 'Incorrect format, try again with .avi or .mp4 .'\n    };\n    /**\n     * @description:\n     */\n    this.SERVER_URL = \"http://127.0.0.1:1337\";\n  }\n  /*\n  * @description:\n  */\n  addFiles(files) {}\n  /*\n  * @description:\n  */\n  getServerUrl(path_url = undefined) {\n    if (path_url !== undefined) {\n      return '' + path_url;\n    }\n    return 'http://127.0.0.1:1337/api/upload';\n  }\n  /*\n  * @description:\n  */\n  upload(formData, path_url = undefined) {\n    return this.HttpClient.post(this.getServerUrl(path_url), formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n  /*\n  * @description:\n  */\n  cancel(file_upload_request) {\n    file_upload_request.unsubscribe();\n  }\n  /*\n  * @description:\n  */\n  getExtension(src) {\n    const spl_video = src.split(`.`);\n    const ext = spl_video[spl_video.length - 1];\n    return ext.toLowerCase();\n  }\n  /*\n  * @description:\n  */\n  isVideoFileSrc(src) {\n    const ext = this.getExtension(src);\n    const extList = ['avi', 'mp4', 'webm', 'mov'];\n    if (extList.indexOf(ext) === -1) {\n      return false;\n    }\n    return true;\n  }\n  /*\n  * @description:\n  */\n  isImageFileSrc(src) {\n    const ext = this.getExtension(src);\n    const extList = ['png', 'gif', 'jpeg', 'jpg', 'webp'];\n    if (extList.indexOf(ext) === -1) {\n      return false;\n    }\n    return true;\n  }\n  /*\n  * @description:\n  */\n  formatCropCoordinate(cropThis, file_path) {\n    const cropperPosition = cropThis.cropperPosition;\n    const imagePosition = cropThis.imagePosition;\n    delete cropThis.base64;\n    delete cropThis.cropperPosition;\n    delete cropThis.imagePosition;\n    for (const key of Object.keys(cropperPosition)) {\n      cropThis['cropper_position_' + key] = parseInt(cropperPosition[key]);\n    }\n    for (const key of Object.keys(imagePosition)) {\n      cropThis['image_position_' + key] = parseInt(imagePosition[key]);\n    }\n    cropThis.file_path = file_path;\n    return cropThis;\n  }\n  /**\n   * @description: Get file from Strapi.\n   */\n  getSrc(file) {\n    if (file.data === null) {\n      return '';\n    }\n    return file.data.attributes.url;\n  }\n  /**\n   * @description: Get file from Strapi.\n   */\n  getFileSize(file) {\n    if (file.data === null) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n    return {\n      width: file.data.attributes.width,\n      height: file.data.attributes.height\n    };\n  }\n}\n_class = FileService;\n_class.ɵfac = function FileService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["Subject","FileService","constructor","HttpClient","image","video","addFiles","files","getServerUrl","path_url","undefined","upload","formData","post","reportProgress","observe","cancel","file_upload_request","unsubscribe","getExtension","src","spl_video","split","ext","length","toLowerCase","isVideoFileSrc","extList","indexOf","isImageFileSrc","formatCropCoordinate","cropThis","file_path","cropperPosition","imagePosition","base64","key","Object","keys","parseInt","getSrc","file","data","attributes","url","getFileSize","width","height","factory","providedIn"],"sourceRoot":"","sources":["/var/projects/base/ng-base/src/app/services/file.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\n/**\n * @description: Size interface\n */\nexport interface Size {\n  width: number;\n  height: number;\n}\n\n/**\n * @description: Strapi file interface.\n */\nexport interface StrapiUniFile {\n  data: {\n    id: number;\n    attributes: {\n      name: string;\n      alternativeText: string;\n      caption: string;\n      width: number;\n      height: number;\n      formats: {\n        thumbnail: {\n          ext: string;\n          url: string;\n          hash: string;\n          mime: string;\n          name: string;\n          path: null;\n          size: number;\n          width: number;\n          height: number;\n        };\n      };\n      hash: string;\n      ext: string;\n      mime: string;\n      size: number;\n      url: string;\n      previewUrl: null;\n      provider: string;\n      provider_metadata: null;\n      createdAt: string;\n      updatedAt: string;\n    };\n  }\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n   * @description: \n   */\n  public stream: Subject<any> = new Subject<any>();\n\n  /**\n   * @description: \n   */\n  public upload_file_type_mime = {\n    image: [\n      'image/png',\n      'image/gif',\n      'image/jpeg',\n      'image/webp'\n    ],\n    video: [\n      'video/x-matroska',\n      'video/x-ms-wmv',\n      'video/x-ms-asf',\n      'video/x-msvideo',\n      'video/quicktime',\n      'video/webm',\n      'audio/mpeg',\n      'video/mp4',\n    ],\n  };\n\n  /**\n   * @description: \n   */\n  public bad_file_type_mime_message = {\n    image: `Incorrect format, try again with .jpg, .png, .gif only`,\n    video: 'Incorrect format, try again with .avi or .mp4 .'\n  }\n\n  /**\n   * @description: \n   */\n  SERVER_URL: string = \"http://127.0.0.1:1337\";\n\n  /*\n  * @description:\n  */\n  constructor(\n    private HttpClient: HttpClient,\n  ) {\n\n  }\n\n  /*\n  * @description:\n  */\n  public addFiles(files: any) {\n\n  }\n\n  /*\n  * @description:\n  */\n  private getServerUrl(path_url: any = undefined): string {\n      if (path_url !== undefined) {\n        return '' + path_url;\n      }\n      return 'http://127.0.0.1:1337/api/upload';\n  }\n\n  /*\n  * @description:\n  */\n  public upload(formData: any, path_url: any=undefined) {\n    return this.HttpClient.post<any>(this.getServerUrl(path_url), formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  /*\n  * @description:\n  */\n  public cancel(file_upload_request: any) {\n    file_upload_request.unsubscribe();\n  }\n\n  /*\n  * @description:\n  */\n  public getExtension(src: string): string {\n    const spl_video = src.split(`.`);\n    const ext = spl_video[spl_video.length -1];\n    return ext.toLowerCase();\n  }\n\n\n  /*\n  * @description:\n  */\n  public isVideoFileSrc(src: string): boolean {\n    const ext = this.getExtension(src);\n    const extList = ['avi', 'mp4', 'webm', 'mov'];\n\n    if (extList.indexOf(ext) === -1) {\n      return false;\n    }\n    \n    return true;\n  }\n\n  /*\n  * @description:\n  */\n  public isImageFileSrc(src: string): boolean {\n    const ext = this.getExtension(src);\n    const extList = ['png', 'gif', 'jpeg', 'jpg', 'webp'];\n    if (extList.indexOf(ext) === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /*\n  * @description:\n  */\n  public formatCropCoordinate(cropThis: any, file_path: string): any {\n    const cropperPosition: any = cropThis.cropperPosition;\n    const imagePosition: any = cropThis.imagePosition;\n\n    delete cropThis.base64;\n    delete cropThis.cropperPosition;\n    delete cropThis.imagePosition;\n\n    for (const key of Object.keys(cropperPosition)) {\n        cropThis['cropper_position_' + key] = parseInt(cropperPosition[key]);\n    }\n\n    for (const key of Object.keys(imagePosition)) {\n        cropThis['image_position_' + key] = parseInt(imagePosition[key]);\n    }\n\n    cropThis.file_path = file_path;\n    return cropThis;\n  }\n\n  /**\n   * @description: Get file from Strapi.\n   */\n  public getSrc(file: StrapiUniFile): string {\n    if (file.data === null) { return ''; }\n    return file.data.attributes.url;\n  }\n\n  /**\n   * @description: Get file from Strapi.\n   */\n  public getFileSize(file: StrapiUniFile): Size {\n    if (file.data === null) { \n      return {\n        width: 0,\n        height: 0,\n      }; \n    }\n    return {\n      width: file.data.attributes.width,\n      height: file.data.attributes.height,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}