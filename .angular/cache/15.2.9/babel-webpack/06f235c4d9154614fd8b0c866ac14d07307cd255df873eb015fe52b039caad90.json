{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\n;\nexport class ChatroomService {\n  constructor() {\n    /**\n     * @description: The stream of data from the websocket\n     */\n    this.stream = new Subject();\n  }\n  /**\n   * @description:\n   */\n  recept__messages(data) {\n    this.stream.next({\n      event: 'messages',\n      data: data\n    });\n  }\n  /**\n   * @description:\n   */\n  recept__participants_counter(data) {\n    this.stream.next({\n      event: 'participants_counter',\n      data: data\n    });\n  }\n  /**\n   * @description:\n   */\n  recept__error(data) {}\n  /**\n   * @description:\n   */\n  send_message(message) {\n    this.ws_connection?.wsService?.send(this.ws_connection, {\n      'new_message': message\n    });\n  }\n  /**\n   * @description:\n   */\n  recept__new_message(data) {\n    this.stream.next({\n      event: 'new_message',\n      data: data\n    });\n  }\n}\n_class = ChatroomService;\n_class.ɵfac = function ChatroomService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAS7B;AAKD,OAAM,MAAOC,eAAe;EAW1BC;IALA;;;IAGO,WAAM,GAA4B,IAAIF,OAAO,EAAkB;EAIlE;EAEJ;;;EAGOG,gBAAgB,CAACC,IAAS;IAC/B,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC;MACfC,KAAK,EAAE,UAAU;MACjBH,IAAI,EAAEA;KACP,CAAC;EACJ;EAEA;;;EAGOI,4BAA4B,CAACJ,IAAS;IAC3C,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC;MACfC,KAAK,EAAE,sBAAsB;MAC7BH,IAAI,EAAEA;KACP,CAAC;EACJ;EAEA;;;EAGOK,aAAa,CAACL,IAAS,GAE9B;EAEA;;;EAGOM,YAAY,CAACC,OAAe;IACjC,IAAI,CAACC,aAAa,EAAEC,SAAS,EAAEC,IAAI,CACjC,IAAI,CAACF,aAAa,EAClB;MACE,aAAa,EAAED;KAClB,CAAC;EACJ;EAEA;;;EAGOI,mBAAmB,CAACX,IAAS;IAClC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC;MACfC,KAAK,EAAE,aAAa;MACpBH,IAAI,EAAEA;KACP,CAAC;EACJ;;SA7DWH,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAe,SAAff,MAAe;EAAAgB,YAFd;AAAM","names":["Subject","ChatroomService","constructor","recept__messages","data","stream","next","event","recept__participants_counter","recept__error","send_message","message","ws_connection","wsService","send","recept__new_message","factory","providedIn"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/chatroom/services/chatroom.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WebSocketsConfig } from 'src/app/services/websocket.service';\n\n/**\n * @description: \n */\nexport interface ChatroomStream {\n  event: string,\n  data: any,\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatroomService {\n  /**\n   * @description: \n   */\n  public ws_connection: WebSocketsConfig | undefined;\n\n  /**\n   * @description: The stream of data from the websocket\n   */\n  public stream: Subject<ChatroomStream> = new Subject<ChatroomStream>();\n\n  constructor(\n    // private wsService: WebsocketService,\n  ) { }\n\n  /**\n   * @description: \n   */\n  public recept__messages(data: any): void {\n    this.stream.next({\n      event: 'messages',\n      data: data,\n    });\n  }\n\n  /**\n   * @description: \n   */\n  public recept__participants_counter(data: any): void {\n    this.stream.next({\n      event: 'participants_counter',\n      data: data,\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public recept__error(data: any): void {\n\n  }\n\n  /**\n   * @description: \n   */\n  public send_message(message: string): void {\n    this.ws_connection?.wsService?.send(\n      this.ws_connection,\n      {\n        'new_message': message,\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public recept__new_message(data: any): void {\n    this.stream.next({\n      event: 'new_message',\n      data: data,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}