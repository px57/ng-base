{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/modules/profile/services/user.service\";\nimport * as i3 from \"src/modules/tools/services/http.service\";\n;\nexport let GlobalResolver = /*#__PURE__*/(() => {\n  var _class;\n  class GlobalResolver {\n    constructor(router, user, activatedRoute, httpService) {\n      this.router = router;\n      this.user = user;\n      this.activatedRoute = activatedRoute;\n      this.httpService = httpService;\n    }\n    resolve() {\n      return new Promise(resolve => {\n        this.response = resolve;\n        this.route = this.activatedRoute.snapshot;\n        this.state = this.router.routerState;\n        if (!this.user.data_loaded()) {\n          this.user.update_data().subscribe(response => {\n            this.callback.bind(this);\n            this.httpService.get('v1/auth/me').subscribe(response => {\n              this.user.set_data(response);\n              this.callback();\n              if (response.data.onboarding !== true) {\n                this.router.navigate(['/', 'auth', 'onboarding', 'start']);\n              }\n              resolve({\n                success: true\n              });\n            });\n          });\n        } else {\n          this.callback();\n          resolve({\n            success: true\n          });\n        }\n      });\n    }\n    callback() {\n      const data = this.user.get_data();\n      this.response(data);\n    }\n  }\n  _class = GlobalResolver;\n  _class.ɵfac = function GlobalResolver_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i3.HttpService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return GlobalResolver;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}