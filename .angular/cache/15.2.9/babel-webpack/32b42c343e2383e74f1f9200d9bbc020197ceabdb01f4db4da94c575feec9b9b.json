{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/modules/modal/services/switch-modal.service\";\nexport let BalanceService = /*#__PURE__*/(() => {\n  var _class;\n  class BalanceService {\n    constructor(switchModalService) {\n      this.switchModalService = switchModalService;\n      /**\n       * @description:\n       */\n      this.stream = new Subject();\n      /**\n       * @description:\n       */\n      this.balance = 0;\n      setInterval(() => {\n        this.getBalance();\n      }, 500);\n    }\n    /**\n     * @description:\n     * @savein.service -> balance\n     * @savein.stream -> balance\n     * @savein.localStorage -> balance\n     */\n    setBalance(balance) {\n      this.balance = balance;\n      localStorage.setItem('balance', balance.toString());\n      this.stream.next(balance);\n    }\n    /**\n     * @description:\n     */\n    getBalance() {\n      let balance = localStorage.getItem('balance');\n      if (balance === null) {\n        return this.balance;\n      }\n      if (this.balance !== parseInt(balance)) {\n        this.setBalance(parseInt(balance));\n      }\n      return this.balance;\n    }\n    /**\n     * @description:\n     */\n    hasSuffisantMoney(amount) {\n      let balance = this.getBalance();\n      if (balance < amount) {\n        return false;\n      }\n      return true;\n    }\n    /**\n     * @description:\n     */\n    open_balance_modal() {\n      this.switchModalService.open_modal('balance');\n    }\n  }\n  _class = BalanceService;\n  _class.ɵfac = function BalanceService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.SwitchModalService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return BalanceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}