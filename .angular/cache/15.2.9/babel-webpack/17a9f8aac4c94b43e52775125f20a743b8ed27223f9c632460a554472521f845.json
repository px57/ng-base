{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./http.service\";\nexport class LibsService {\n  /*\n   * @description:\n   */\n  constructor(\n  // private cookieService: CookieService,\n  router, h) {\n    this.router = router;\n    this.h = h;\n    this.timezone_list = [{\n      key: 'US/Hawaii',\n      value: '(UTC−10) Hawaii'\n    }, {\n      key: 'US/Alaska',\n      value: '(UTC−9) Alaska'\n    }, {\n      key: 'Canada/Pacific',\n      value: '(UTC−8) Pacific U.S & Canada'\n    }, {\n      key: 'US/Arizona',\n      value: '(UTC−7) Arizona'\n    }, {\n      key: 'Canada/Central',\n      value: '(UTC−6) Central America'\n    }, {\n      key: 'America/Mexico_City',\n      value: '(UTC−6) Mexico'\n    }, {\n      key: 'America/Bogota',\n      value: '(UTC−5) Bogota'\n    }, {\n      key: 'America/Havana',\n      value: '(UTC−5) Havana'\n    }, {\n      key: 'US/Eastern',\n      value: '(UTC−5) Eastern'\n    }, {\n      key: 'Canada/Atlantic',\n      value: '(UTC−4) Atlantic'\n    }, {\n      key: 'America/Sao_Paulo',\n      value: '(UTC−3) Brasilia'\n    }, {\n      key: 'America/Argentina/Buenos_Aires',\n      value: '(UTC−3) Buenos_Aires'\n    }, {\n      key: 'America/El_Salvador',\n      value: '(UTC−3) El Salvador'\n    }, {\n      key: 'Africa/Cairo',\n      value: '(UTC−2) Cairo'\n    }, {\n      key: 'Atlantic/Cape_Verde',\n      value: '(UTC−1) Cape_Verde'\n    }, {\n      key: 'Europe/Dublin',\n      value: '(UTC+0) Dublin, Lisbon, London'\n    }, {\n      key: 'Africa/Casablanca',\n      value: '(UTC+1) Casablanca'\n    }, {\n      key: 'Europe/Amsterdam',\n      value: '(UTC+1) Amsterdam, Berlin, Rome, Stockholm, Vienna'\n    }, {\n      key: 'Europe/Berlin',\n      value: '(UTC+1) Belgrade, Budapest, Ljubljana, Prague'\n    }, {\n      key: 'Europe/Madrid',\n      value: '(UTC+1) Brussels, Copenhagen, Madrid, Paris'\n    }, {\n      key: 'Europe/Sarajevo',\n      value: '(UTC+1) Sarajevo, Skopje, Warsaw, Zagreb'\n    }, {\n      key: 'Europe/Athens',\n      value: '(UTC+2) Athens, Bucharest'\n    }, {\n      key: 'Europe/Chisinau',\n      value: '(UTC+2) Chisinau'\n    }, {\n      key: 'Asia/Damascus',\n      value: '(UTC+2) Damascus'\n    }, {\n      key: 'Asia/Gaza',\n      value: '(UTC+2) Gaza'\n    }, {\n      key: 'Europe/Helsinki',\n      value: '(UTC+2) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius'\n    }, {\n      key: 'Asia/Jerusalem',\n      value: '(UTC+2) Jerusalem'\n    }, {\n      key: 'Africa/Tripoli',\n      value: '(UTC+2) Tripoli'\n    }, {\n      key: 'Europe/Istanbul',\n      value: '(UTC+3) Istanbul'\n    }, {\n      key: 'Asia/Kuwait',\n      value: '(UTC+3) Kuwait'\n    }, {\n      key: 'Europe/Minsk',\n      value: '(UTC+3) Minsk'\n    }, {\n      key: 'Europe/Moscow',\n      value: '(UTC+3) Moscow'\n    }, {\n      key: 'Asia/Muscat',\n      value: '(UTC+4) Muscat'\n    }, {\n      key: 'Asia/Dubai',\n      value: '(UTC+4) Dubai'\n    }, {\n      key: 'Europe/Saratov',\n      value: '(UTC+4) Saratov'\n    }, {\n      key: 'Asia/Omsk',\n      value: '(UTC+6) Omsk'\n    }, {\n      key: 'Asia/Bangkok',\n      value: '(UTC+7) Bangkok'\n    }, {\n      key: 'Asia/Tomsk',\n      value: '(UTC+7) Tomsk'\n    }, {\n      key: 'Asia/Hong_Kong',\n      value: '(UTC+8) Hong_Kong'\n    }, {\n      key: 'Asia/Singapore',\n      value: '(UTC+8) Singapore'\n    }, {\n      key: 'Asia/Tokyo',\n      value: '(UTC+9) Tokyo'\n    }, {\n      key: 'Asia/Pyongyang',\n      value: '(UTC+9) Pyongyang'\n    }, {\n      key: 'Asia/Seoul',\n      value: '(UTC+9) Seoul'\n    }, {\n      key: 'Australia/Brisbane',\n      value: '(UTC+10) Brisbane'\n    }, {\n      key: 'Australia/Sydney',\n      value: '(UTC+10) Sydney'\n    }, {\n      key: 'Pacific/Bougainville',\n      value: '(UTC+11) Bougainville'\n    }, {\n      key: 'Pacific/Auckland',\n      value: '(UTC+12) Auckland'\n    }];\n    /*\n     * @description:\n     */\n    this.countryList = [{\n      code: `AF`,\n      name: `Afghanistan`\n    }, {\n      code: `AX`,\n      name: `Åland Islands`\n    }, {\n      code: `AL`,\n      name: `Albania`\n    }, {\n      code: `DZ`,\n      name: `Algeria`\n    }, {\n      code: `AS`,\n      name: `American Samoa`\n    }, {\n      code: `AD`,\n      name: `Andorra`\n    }, {\n      code: `AO`,\n      name: `Angola`\n    }, {\n      code: `AI`,\n      name: `Anguilla`\n    }, {\n      code: `AQ`,\n      name: `Antarctica`\n    }, {\n      code: `AG`,\n      name: `Antigua and Barbuda`\n    }, {\n      code: `AR`,\n      name: `Argentina`\n    }, {\n      code: `AM`,\n      name: `Armenia`\n    }, {\n      code: `AW`,\n      name: `Aruba`\n    }, {\n      code: `AU`,\n      name: `Australia`\n    }, {\n      code: `AT`,\n      name: `Austria`\n    }, {\n      code: `AZ`,\n      name: `Azerbaijan`\n    }, {\n      code: `BS`,\n      name: `Bahamas`\n    }, {\n      code: `BH`,\n      name: `Bahrain`\n    }, {\n      code: `BD`,\n      name: `Bangladesh`\n    }, {\n      code: `BB`,\n      name: `Barbados`\n    }, {\n      code: `BY`,\n      name: `Belarus`\n    }, {\n      code: `BE`,\n      name: `Belgium`\n    }, {\n      code: `BZ`,\n      name: `Belize`\n    }, {\n      code: `BJ`,\n      name: `Benin`\n    }, {\n      code: `BM`,\n      name: `Bermuda`\n    }, {\n      code: `BT`,\n      name: `Bhutan`\n    }, {\n      code: `BO`,\n      name: `Bolivia`\n    }, {\n      code: `BQ`,\n      name: `Bonaire, Sint Eustatius and Saba`\n    }, {\n      code: `BA`,\n      name: `Bosnia and Herzegovina`\n    }, {\n      code: `BW`,\n      name: `Botswana`\n    }, {\n      code: `BV`,\n      name: `Bouvet Island`\n    }, {\n      code: `BR`,\n      name: `Brazil`\n    }, {\n      code: `IO`,\n      name: `British Indian Ocean Territory`\n    }, {\n      code: `BN`,\n      name: `Brunei`\n    }, {\n      code: `BG`,\n      name: `Bulgaria`\n    }, {\n      code: `BF`,\n      name: `Burkina Faso`\n    }, {\n      code: `BI`,\n      name: `Burundi`\n    }, {\n      code: `CV`,\n      name: `Cabo Verde`\n    }, {\n      code: `KH`,\n      name: `Cambodia`\n    }, {\n      code: `CM`,\n      name: `Cameroon`\n    }, {\n      code: `CA`,\n      name: `Canada`\n    }, {\n      code: `KY`,\n      name: `Cayman Islands`\n    }, {\n      code: `CF`,\n      name: `Central African Republic`\n    }, {\n      code: `TD`,\n      name: `Chad`\n    }, {\n      code: `CL`,\n      name: `Chile`\n    }, {\n      code: `CN`,\n      name: `China`\n    }, {\n      code: `CX`,\n      name: `Christmas Island`\n    }, {\n      code: `CC`,\n      name: `Cocos (Keeling) Islands`\n    }, {\n      code: `CO`,\n      name: `Colombia`\n    }, {\n      code: `KM`,\n      name: `Comoros`\n    }, {\n      code: `CG`,\n      name: `Congo`\n    }, {\n      code: `CD`,\n      name: `Congo (the Democratic Republic of the)`\n    }, {\n      code: `CK`,\n      name: `Cook Islands`\n    }, {\n      code: `CR`,\n      name: `Costa Rica`\n    }, {\n      code: `CI`,\n      name: \"Côte d'Ivoire\"\n    }, {\n      code: `HR`,\n      name: `Croatia`\n    }, {\n      code: `CU`,\n      name: `Cuba`\n    }, {\n      code: `CW`,\n      name: `Curaçao`\n    }, {\n      code: `CY`,\n      name: `Cyprus`\n    }, {\n      code: `CZ`,\n      name: `Czechia`\n    }, {\n      code: `DK`,\n      name: `Denmark`\n    }, {\n      code: `DJ`,\n      name: `Djibouti`\n    }, {\n      code: `DM`,\n      name: `Dominica`\n    }, {\n      code: `DO`,\n      name: `Dominican Republic`\n    }, {\n      code: `EC`,\n      name: `Ecuador`\n    }, {\n      code: `EG`,\n      name: `Egypt`\n    }, {\n      code: `SV`,\n      name: `El Salvador`\n    }, {\n      code: `GQ`,\n      name: `Equatorial Guinea`\n    }, {\n      code: `ER`,\n      name: `Eritrea`\n    }, {\n      code: `EE`,\n      name: `Estonia`\n    }, {\n      code: `SZ`,\n      name: `Eswatini`\n    }, {\n      code: `ET`,\n      name: `Ethiopia`\n    }, {\n      code: `FK`,\n      name: `Falkland Islands  [Malvinas]`\n    }, {\n      code: `FO`,\n      name: `Faroe Islands`\n    }, {\n      code: `FJ`,\n      name: `Fiji`\n    }, {\n      code: `FI`,\n      name: `Finland`\n    }, {\n      code: `FR`,\n      name: `France`\n    }, {\n      code: `GF`,\n      name: `French Guiana`\n    }, {\n      code: `PF`,\n      name: `French Polynesia`\n    }, {\n      code: `TF`,\n      name: `French Southern Territories`\n    }, {\n      code: `GA`,\n      name: `Gabon`\n    }, {\n      code: `GM`,\n      name: `Gambia`\n    }, {\n      code: `GE`,\n      name: `Georgia`\n    }, {\n      code: `DE`,\n      name: `Germany`\n    }, {\n      code: `GH`,\n      name: `Ghana`\n    }, {\n      code: `GI`,\n      name: `Gibraltar`\n    }, {\n      code: `GR`,\n      name: `Greece`\n    }, {\n      code: `GL`,\n      name: `Greenland`\n    }, {\n      code: `GD`,\n      name: `Grenada`\n    }, {\n      code: `GP`,\n      name: `Guadeloupe`\n    }, {\n      code: `GU`,\n      name: `Guam`\n    }, {\n      code: `GT`,\n      name: `Guatemala`\n    }, {\n      code: `GG`,\n      name: `Guernsey`\n    }, {\n      code: `GN`,\n      name: `Guinea`\n    }, {\n      code: `GW`,\n      name: `Guinea-Bissau`\n    }, {\n      code: `GY`,\n      name: `Guyana`\n    }, {\n      code: `HT`,\n      name: `Haiti`\n    }, {\n      code: `HM`,\n      name: `Heard Island and McDonald Islands`\n    }, {\n      code: `VA`,\n      name: `Holy See`\n    }, {\n      code: `HN`,\n      name: `Honduras`\n    }, {\n      code: `HK`,\n      name: `Hong Kong`\n    }, {\n      code: `HU`,\n      name: `Hungary`\n    }, {\n      code: `IS`,\n      name: `Iceland`\n    }, {\n      code: `IN`,\n      name: `India`\n    }, {\n      code: `ID`,\n      name: `Indonesia`\n    }, {\n      code: `IR`,\n      name: `Iran`\n    }, {\n      code: `IQ`,\n      name: `Iraq`\n    }, {\n      code: `IE`,\n      name: `Ireland`\n    }, {\n      code: `IM`,\n      name: `Isle of Man`\n    }, {\n      code: `IL`,\n      name: `Israel`\n    }, {\n      code: `IT`,\n      name: `Italy`\n    }, {\n      code: `JM`,\n      name: `Jamaica`\n    }, {\n      code: `JP`,\n      name: `Japan`\n    }, {\n      code: `JE`,\n      name: `Jersey`\n    }, {\n      code: `JO`,\n      name: `Jordan`\n    }, {\n      code: `KZ`,\n      name: `Kazakhstan`\n    }, {\n      code: `KE`,\n      name: `Kenya`\n    }, {\n      code: `KI`,\n      name: `Kiribati`\n    }, {\n      code: `KW`,\n      name: `Kuwait`\n    }, {\n      code: `KG`,\n      name: `Kyrgyzstan`\n    }, {\n      code: `LA`,\n      name: `Laos`\n    }, {\n      code: `LV`,\n      name: `Latvia`\n    }, {\n      code: `LB`,\n      name: `Lebanon`\n    }, {\n      code: `LS`,\n      name: `Lesotho`\n    }, {\n      code: `LR`,\n      name: `Liberia`\n    }, {\n      code: `LY`,\n      name: `Libya`\n    }, {\n      code: `LI`,\n      name: `Liechtenstein`\n    }, {\n      code: `LT`,\n      name: `Lithuania`\n    }, {\n      code: `LU`,\n      name: `Luxembourg`\n    }, {\n      code: `MO`,\n      name: `Macao`\n    }, {\n      code: `MG`,\n      name: `Madagascar`\n    }, {\n      code: `MW`,\n      name: `Malawi`\n    }, {\n      code: `MY`,\n      name: `Malaysia`\n    }, {\n      code: `MV`,\n      name: `Maldives`\n    }, {\n      code: `ML`,\n      name: `Mali`\n    }, {\n      code: `MT`,\n      name: `Malta`\n    }, {\n      code: `MH`,\n      name: `Marshall Islands`\n    }, {\n      code: `MQ`,\n      name: `Martinique`\n    }, {\n      code: `MR`,\n      name: `Mauritania`\n    }, {\n      code: `MU`,\n      name: `Mauritius`\n    }, {\n      code: `YT`,\n      name: `Mayotte`\n    }, {\n      code: `MX`,\n      name: `Mexico`\n    }, {\n      code: `FM`,\n      name: `Micronesia (Federated States of)`\n    }, {\n      code: `MD`,\n      name: `Moldova`\n    }, {\n      code: `MC`,\n      name: `Monaco`\n    }, {\n      code: `MN`,\n      name: `Mongolia`\n    }, {\n      code: `ME`,\n      name: `Montenegro`\n    }, {\n      code: `MS`,\n      name: `Montserrat`\n    }, {\n      code: `MA`,\n      name: `Morocco`\n    }, {\n      code: `MZ`,\n      name: `Mozambique`\n    }, {\n      code: `MM`,\n      name: `Myanmar`\n    }, {\n      code: `NA`,\n      name: `Namibia`\n    }, {\n      code: `NR`,\n      name: `Nauru`\n    }, {\n      code: `NP`,\n      name: `Nepal`\n    }, {\n      code: `NL`,\n      name: `Netherlands`\n    }, {\n      code: `NC`,\n      name: `New Caledonia`\n    }, {\n      code: `NZ`,\n      name: `New Zealand`\n    }, {\n      code: `NI`,\n      name: `Nicaragua`\n    }, {\n      code: `NE`,\n      name: `Niger`\n    }, {\n      code: `NG`,\n      name: `Nigeria`\n    }, {\n      code: `NU`,\n      name: `Niue`\n    }, {\n      code: `NF`,\n      name: `Norfolk Island`\n    }, {\n      code: `KP`,\n      name: `North Korea`\n    }, {\n      code: `MK`,\n      name: `North Macedonia`\n    }, {\n      code: `MP`,\n      name: `Northern Mariana Islands`\n    }, {\n      code: `NO`,\n      name: `Norway`\n    }, {\n      code: `OM`,\n      name: `Oman`\n    }, {\n      code: `PK`,\n      name: `Pakistan`\n    }, {\n      code: `PW`,\n      name: `Palau`\n    }, {\n      code: `PS`,\n      name: `Palestine, State of`\n    }, {\n      code: `PA`,\n      name: `Panama`\n    }, {\n      code: `PG`,\n      name: `Papua New Guinea`\n    }, {\n      code: `PY`,\n      name: `Paraguay`\n    }, {\n      code: `PE`,\n      name: `Peru`\n    }, {\n      code: `PH`,\n      name: `Philippines`\n    }, {\n      code: `PN`,\n      name: `Pitcairn`\n    }, {\n      code: `PL`,\n      name: `Poland`\n    }, {\n      code: `PT`,\n      name: `Portugal`\n    }, {\n      code: `PR`,\n      name: `Puerto Rico`\n    }, {\n      code: `QA`,\n      name: `Qatar`\n    }, {\n      code: `RE`,\n      name: `Réunion`\n    }, {\n      code: `RO`,\n      name: `Romania`\n    }, {\n      code: `RU`,\n      name: `Russia`\n    }, {\n      code: `RW`,\n      name: `Rwanda`\n    }, {\n      code: `BL`,\n      name: `Saint Barthélemy`\n    }, {\n      code: `SH`,\n      name: `Saint Helena, Ascension and Tristan da Cunha`\n    }, {\n      code: `KN`,\n      name: `Saint Kitts and Nevis`\n    }, {\n      code: `LC`,\n      name: `Saint Lucia`\n    }, {\n      code: `MF`,\n      name: `Saint Martin (French part)`\n    }, {\n      code: `PM`,\n      name: `Saint Pierre and Miquelon`\n    }, {\n      code: `VC`,\n      name: `Saint Vincent and the Grenadines`\n    }, {\n      code: `WS`,\n      name: `Samoa`\n    }, {\n      code: `SM`,\n      name: `San Marino`\n    }, {\n      code: `ST`,\n      name: `Sao Tome and Principe`\n    }, {\n      code: `SA`,\n      name: `Saudi Arabia`\n    }, {\n      code: `SN`,\n      name: `Senegal`\n    }, {\n      code: `RS`,\n      name: `Serbia`\n    }, {\n      code: `SC`,\n      name: `Seychelles`\n    }, {\n      code: `SL`,\n      name: `Sierra Leone`\n    }, {\n      code: `SG`,\n      name: `Singapore`\n    }, {\n      code: `SX`,\n      name: `Sint Maarten (Dutch part)`\n    }, {\n      code: `SK`,\n      name: `Slovakia`\n    }, {\n      code: `SI`,\n      name: `Slovenia`\n    }, {\n      code: `SB`,\n      name: `Solomon Islands`\n    }, {\n      code: `SO`,\n      name: `Somalia`\n    }, {\n      code: `ZA`,\n      name: `South Africa`\n    }, {\n      code: `GS`,\n      name: `South Georgia and the South Sandwich Islands`\n    }, {\n      code: `KR`,\n      name: `South Korea`\n    }, {\n      code: `SS`,\n      name: `South Sudan`\n    }, {\n      code: `ES`,\n      name: `Spain`\n    }, {\n      code: `LK`,\n      name: `Sri Lanka`\n    }, {\n      code: `SD`,\n      name: `Sudan`\n    }, {\n      code: `SR`,\n      name: `Suriname`\n    }, {\n      code: `SJ`,\n      name: `Svalbard and Jan Mayen`\n    }, {\n      code: `SE`,\n      name: `Sweden`\n    }, {\n      code: `CH`,\n      name: `Switzerland`\n    }, {\n      code: `SY`,\n      name: `Syria`\n    }, {\n      code: `TW`,\n      name: `Taiwan`\n    }, {\n      code: `TJ`,\n      name: `Tajikistan`\n    }, {\n      code: `TZ`,\n      name: `Tanzania`\n    }, {\n      code: `TH`,\n      name: `Thailand`\n    }, {\n      code: `TL`,\n      name: `Timor-Leste`\n    }, {\n      code: `TG`,\n      name: `Togo`\n    }, {\n      code: `TK`,\n      name: `Tokelau`\n    }, {\n      code: `TO`,\n      name: `Tonga`\n    }, {\n      code: `TT`,\n      name: `Trinidad and Tobago`\n    }, {\n      code: `TN`,\n      name: `Tunisia`\n    }, {\n      code: `TR`,\n      name: `Turkey`\n    }, {\n      code: `TM`,\n      name: `Turkmenistan`\n    }, {\n      code: `TC`,\n      name: `Turks and Caicos Islands`\n    }, {\n      code: `TV`,\n      name: `Tuvalu`\n    }, {\n      code: `UG`,\n      name: `Uganda`\n    }, {\n      code: `UA`,\n      name: `Ukraine`\n    }, {\n      code: `AE`,\n      name: `United Arab Emirates`\n    }, {\n      code: `GB`,\n      name: `United Kingdom`\n    }, {\n      code: `UM`,\n      name: `United States Minor Outlying Islands`\n    }, {\n      code: `US`,\n      name: `United States of America`\n    }, {\n      code: `UY`,\n      name: `Uruguay`\n    }, {\n      code: `UZ`,\n      name: `Uzbekistan`\n    }, {\n      code: `VU`,\n      name: `Vanuatu`\n    }, {\n      code: `VE`,\n      name: `Venezuela`\n    }, {\n      code: `VN`,\n      name: `Vietnam`\n    }, {\n      code: `VG`,\n      name: `Virgin Islands (British)`\n    }, {\n      code: `VI`,\n      name: `Virgin Islands (U.S.)`\n    }, {\n      code: `WF`,\n      name: `Wallis and Futuna`\n    }, {\n      code: `EH`,\n      name: `Western Sahara`\n    }, {\n      code: `YE`,\n      name: `Yemen`\n    }, {\n      code: `ZM`,\n      name: `Zambia`\n    }, {\n      code: `ZW`,\n      name: `Zimbabw`\n    }];\n    /*\n     * @description:\n     */\n    this.hold_scrolltop = undefined;\n  }\n  /*\n   * @description: Veuillez à prendre en charge la complexité de cette applications au travers d'un usages\n   * Particulier.\n   */\n  connect_before_use() {\n    let password = 'htopwget';\n    // if (this.cookieService.get('password').length === 0) {\n    //   while (true) {\n    //     let entered_password = prompt(\"Entrer mot de passe\");\n    //     if (entered_password==password) {\n    //       this.cookieService.set('password', entered_password);\n    //       return true;\n    //     }\n    //   }\n    // }\n    return true;\n  }\n  /*\n   * @description: Renvoit true sur le media sur lequel je me trouve est bien un téléphones mobiles.\n   */\n  is_mobile() {\n    return window.innerWidth < 812;\n  }\n  /*\n   * @description:\n   */\n  is_desktop() {\n    return !this.is_mobile();\n  }\n  /*\n   * @description: Il s'agit ici d'un helper qui permet de réduire le temps de récupérations des images et de leur intégrations.\n   */\n  responsive_picture(fields, for_mobile = `for_mobile`, for_pc = `for_pc`, for_background_image = true) {\n    let path = '';\n    if (this.is_mobile()) {\n      path = fields[for_mobile];\n    } else {\n      path = fields[for_pc];\n    }\n    if (for_background_image) {\n      return `url(\"${path}\")`;\n    }\n    return path;\n  }\n  /*\n   * @description:\n   */\n  generateUuid() {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n  /*\n   * @description:\n   */\n  add_00_in_end(number) {\n    number = Math.round(number * 100) / 100;\n    let stringNumber = number.toString();\n    const length0 = stringNumber.split('.');\n    if (length0.length === 1) {\n      stringNumber = stringNumber + '.00';\n    } else if (length0[1].length === 1) {\n      stringNumber = stringNumber + '0';\n    }\n    return stringNumber.replace('.', ',');\n  }\n  /*\n   * @description: Transformer cette éléments\n   */\n  convert_video_data(ico) {\n    return {\n      extension: ico.split('.').splice(-1)[0],\n      video: ico\n    };\n  }\n  /*\n   * @description:\n   */\n  convert_phone_number_to_string(phone_number) {\n    if (typeof phone_number === `object`) {\n      if (phone_number['country_code'] === null && phone_number['number'] === null) {\n        return '';\n      }\n      return `+${phone_number['country_code']} ${phone_number['number']}`;\n    }\n    return '';\n  }\n  /*\n   * @description:\n   */\n  timelaps_with_now(time) {}\n  /*\n   * @description:\n   */\n  timelaps_show(time) {}\n  /*\n   * Afficher distinctements l'espace disque occupée par\n   * @params:\n   * size (int) -> Permet d'indiquer la taille de l'éléments.\n   * base_format(string) -> Indique le format de la size par défaut\n   * oc -> Octet\n   * ko -> kilooctet.\n   * mo -> Megaoctet\n   */\n  display_readable_size(size, base_format = 'oc') {\n    // DOC: Part des octet et convertir l'éléments sur cette base.\n    if (base_format == 'oc') {\n      if (size < 1024 * 1024) {\n        return `${Math.round(size / 1024 * 100) / 100}Ko`;\n      } else {\n        return `${Math.round(size / (1024 * 1024) * 100) / 100}Mo`;\n      }\n    }\n    // -> ko\n    // -> mo\n  }\n  /*\n   * In Always display pages scroll to  top;\n   */\n  scrollToTop() {\n    document.body.scrollTop = 0;\n  }\n  /*\n   * @description:\n   */\n  scrollMovingSweet(scrollTop, contain) {\n    let diff = scrollTop - contain.nativeElement.scrollTop;\n    if (diff > 0) {\n      this.scrollToScrollTop(+50, scrollTop, contain);\n    } else {\n      this.scrollToScrollTop(-50, scrollTop, contain);\n    }\n  }\n  scrollToScrollTop(scroll, scrollTop, contain) {\n    setTimeout(() => {\n      contain.nativeElement.scrollTop += scroll;\n      // -> Quitter la boucle si l'ont ne peut pas atteindre la zone de la page indiquer\n      if (this.hold_scrolltop !== undefined && this.hold_scrolltop === contain.nativeElement.scrollTop) {\n        return;\n      }\n      this.hold_scrolltop = contain.nativeElement.scrollTop;\n      this.scrollToScrollTop(scroll, scrollTop, contain);\n    }, 20);\n  }\n  /*\n   * @description: Autorize scroll\n   */\n  autorizeScroll() {\n    document.getElementsByTagName('body')[0].style.overflowY = `auto`;\n  }\n  /*\n   * @description: Bloque scroll;\n   */\n  blockScroll() {\n    document.getElementsByTagName('body')[0].style.overflowY = `hidden`;\n  }\n  /*\n   * @description:\n   */\n  stringIsEmpty(string) {\n    if (string === undefined || string === null) {\n      return true;\n    }\n    string = string.replaceAll(/\\s/g, '');\n    if (string.length === 0) {\n      return true;\n    }\n    return false;\n  }\n  /*\n   * @description:\n   */\n  navigateLink(link) {\n    if (typeof link === 'string') {\n      alert('link width url');\n    } else if (typeof link === 'object') {\n      alert('object');\n    }\n  }\n  /*\n   * @description:\n   */\n  navigateByAnchorLink(anchorId) {\n    const anchor = document.querySelector(`${anchorId}`);\n    if (anchor === null) {\n      return;\n    }\n    const app_container = document.getElementById('app_container');\n    if (app_container === null) {\n      return;\n    }\n    app_container.scroll(0, anchor.offsetTop);\n  }\n  /*\n   * @description:\n   */\n  calculateRatio(coords) {\n    /* euclidean GCD (feel free to use any other) */\n    function gcd(a, b) {\n      if (b > a) {\n        let temp = a;\n        a = b;\n        b = temp;\n      }\n      while (b !== 0) {\n        let m = a % b;\n        a = b;\n        b = m;\n      }\n      return a;\n    }\n    /* ratio is to get the gcd and divide each component by the gcd, then return a string with the typical colon-separated value */\n    function ratio(x, y) {\n      let c = gcd(x, y);\n      return '' + x / c + ':' + y / c;\n    }\n    return ratio(coords.x, coords.y);\n  }\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  /*\n   * @description:\n   */\n  randomList(sizeResponse = 12, listChoices = '0123456789abcdefghijklmnopqrstuvwxyz') {\n    let response = '';\n    for (let i = 0; i < sizeResponse; i++) {\n      const index = Math.floor(Math.random() * listChoices.length - 1 + 1);\n      response += listChoices[index];\n    }\n    return response;\n  }\n  /*\n   * Générer un random de chiffre hexadecimal.\n   * Peut servir par exemple à générer des couleurs hexadecimal aléatoire.\n   */\n  randomHexa(sizeResponse = 6) {\n    const listChoices = '0987654321ABCDEF';\n    return this.randomList(sizeResponse, listChoices);\n  }\n  /*\n   *\n   */\n  navigateByUrl(pathname) {\n    this.router.navigateByUrl(pathname);\n  }\n  /*\n   * @description: Changer l'extension de l'url ou du fichier obtenue\n   */\n  changeExtensionFileOrUrl(fileOrUrl, newExtension) {\n    let splittedUrl = fileOrUrl.split('.');\n    splittedUrl[splittedUrl.length - 1] = newExtension;\n    return splittedUrl.join('.');\n  }\n  /*\n   * @description: Je renvoit ici le nom de mon browser\n   */\n  getBrowserName() {\n    let name = `Unknown`;\n    if (navigator.userAgent.indexOf(`MSIE`) !== -1) {\n      name = `MSIE`;\n    } else if (navigator.userAgent.indexOf(`Firefox`) !== -1) {\n      name = `Firefox`;\n    } else if (navigator.userAgent.indexOf(`Opera`) !== -1) {\n      name = `Opera`;\n    } else if (navigator.userAgent.indexOf(`Chrome`) !== -1) {\n      name = `Chrome`;\n    } else if (navigator.userAgent.indexOf(`Safari`) !== -1) {\n      name = `Safari`;\n    }\n    return name;\n  }\n  /*\n   * @description:\n   */\n  isSafari() {\n    return this.getBrowserName() === `Safari`;\n  }\n  /*\n   * Convertir la date reçut en date envoyers.\n   * @description: Adapter cette éléments pour chaque navigateur.\n   */\n  convertIso861__to_date(iso8601) {\n    if (this.getBrowserName() === `Safari`) {\n      return new Date(iso8601.replace(/-/g, `/`));\n    }\n    return new Date(iso8601);\n  }\n  /*\n   * Faire le travail inverse;\n   */\n  convertDate__toIso8601(date) {\n    return date.toISOString();\n  }\n  /*\n   * @description: Modifier\n   */\n  templateFunction(messageText, ctx) {\n    for (let key of Object.keys(ctx)) {\n      messageText = messageText.replace(`{{${key}}}`, ctx[key]);\n    }\n    return messageText;\n  }\n  /*\n   * @description:\n   */\n  isIosDevice() {\n    return [`iPad Simulator`, `iPhone Simulator`, `iPod Simulator`, `iPad`, `iPhone`, `iPod`].includes(navigator.platform) ||\n    // iPad on iOS 13 detection\n    navigator.userAgent.includes(`Mac`) && `ontouchend` in document;\n  }\n  /*\n   * @description: Il s'agit de savoir s'il s'agit de chrome dans iphones.\n   */\n  isChromeInIos() {\n    if (this.isIosDevice()) {\n      return !this.isSafari();\n    }\n    return false;\n  }\n  /*\n   * @description: est un chiffre pair.\n   */\n  isPair(n) {\n    return n & 1 ? false : true;\n  }\n  /*\n   * @description: Il s'agit ici d'un petit languages de template destiner à la générations des éléments restant\n   */\n  localizeFormat(message, params) {}\n  /*\n   * @description: Permet d'indiquer fonctionnellement que la donnée reçut est incorrect.\n   */\n  isUrl(textMatch) {\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' +\n    // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' +\n    // domain name\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' +\n    // OR ip (v4) address\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' +\n    // port and path\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' +\n    // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n    return !!pattern.test(textMatch);\n  }\n  /*\n   * @description:\n   */\n  addStyle(styleString) {\n    const style = document.createElement('style');\n    style.textContent = styleString;\n    document.head.append(style);\n  }\n  /*\n   * @description: Calculer la distance qui existe entre l'element au sein de la page est le reste.\n   */\n  screenBottom(nativeElement) {\n    const coords = nativeElement.getBoundingClientRect();\n    const screenBottom = coords.y - window.innerHeight;\n    return screenBottom;\n  }\n  /*\n   * @description: Me renvoyer la bonne valeur en width et en height.\n   */\n  aspect_ratio(nativeElement, ratio) {\n    const spitRatio = ratio.split(`/`);\n    window.aspect_ratio = nativeElement;\n    // nativeElement.offsetHeight = nativeElement.offsetWidth;\n    nativeElement.style.height = `${nativeElement.offsetWidth}px`;\n  }\n  /*\n   * @description:\n   */\n  alert(text) {\n    alert(text);\n  }\n  /*\n   * @description:\n   */\n  console_log(text) {\n    console.error(text);\n  }\n  /*\n   * @\n   */\n  ready(fn) {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n  /*\n   * @description: Attendre que la class ait ete creer pour ensuite realiser toute les action inimaginable.\n   */\n  wait_class_create(cll, callback) {\n    setTimeout(() => {\n      const anchor = document.getElementById(cll);\n      if (anchor === null) {\n        return this.wait_class_create(cll, callback);\n      }\n      callback();\n    }, 10);\n  }\n  /*\n   * @description: Verifier si les deux element sont parfaitement egal.\n   */\n  checkObjEqual(obj1, obj2) {\n    for (let key in obj1) {\n      if (!(key in obj2)) {\n        return false;\n      }\n      if (obj1[key] !== obj2[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * @description: Permet de savoir si l'element est dans le viewport.\n   */\n  isEmail(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n  /**\n   * @description: Overflow scroll is activated on the element.\n   */\n  isOverflowScroll(element) {\n    // let \n    return element.scrollWidth > element.clientWidth || element.scrollHeight > element.clientHeight;\n  }\n  /**\n   * @description:\n   */\n  convertNumberToLetterVersion(number) {\n    let number_list = [`zero`, `one`, `two`, `three`, `four`, `five`, `six`, `seven`, `eight`, `nine`, `ten`];\n    return number_list[number];\n  }\n  /**\n   * @description:\n   */\n  toTowerCase(text) {\n    return text.replace(/([A-Z])/g, ' $1').trim();\n  }\n  /**\n   * @description:\n   */\n  get_host() {\n    let host = window.location.host;\n    return host.split(':')[0];\n  }\n  /**\n   * @description:\n   */\n  isDev() {\n    return this.get_host() === `localhost` || this.get_host() === `127.0.0.1`;\n  }\n}\n_class = LibsService;\n_class.ɵfac = function LibsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["LibsService","constructor","router","h","key","value","code","name","undefined","connect_before_use","password","is_mobile","window","innerWidth","is_desktop","responsive_picture","fields","for_mobile","for_pc","for_background_image","path","generateUuid","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","add_00_in_end","number","round","stringNumber","length0","split","length","convert_video_data","ico","extension","splice","video","convert_phone_number_to_string","phone_number","timelaps_with_now","time","timelaps_show","display_readable_size","size","base_format","scrollToTop","document","body","scrollTop","scrollMovingSweet","contain","diff","nativeElement","scrollToScrollTop","scroll","setTimeout","hold_scrolltop","autorizeScroll","getElementsByTagName","style","overflowY","blockScroll","stringIsEmpty","string","replaceAll","navigateLink","link","alert","navigateByAnchorLink","anchorId","anchor","querySelector","app_container","getElementById","offsetTop","calculateRatio","coords","gcd","a","b","temp","m","ratio","x","y","randomList","sizeResponse","listChoices","response","i","index","randomHexa","navigateByUrl","pathname","changeExtensionFileOrUrl","fileOrUrl","newExtension","splittedUrl","join","getBrowserName","navigator","userAgent","indexOf","isSafari","convertIso861__to_date","iso8601","convertDate__toIso8601","date","toISOString","templateFunction","messageText","ctx","Object","keys","isIosDevice","includes","platform","isChromeInIos","isPair","n","localizeFormat","message","params","isUrl","textMatch","pattern","RegExp","test","addStyle","styleString","createElement","textContent","head","append","screenBottom","getBoundingClientRect","innerHeight","aspect_ratio","spitRatio","height","offsetWidth","text","console_log","console","error","ready","fn","addEventListener","wait_class_create","cll","callback","checkObjEqual","obj1","obj2","isEmail","email","isOverflowScroll","element","scrollWidth","clientWidth","scrollHeight","clientHeight","convertNumberToLetterVersion","number_list","toTowerCase","trim","get_host","host","location","isDev","factory","providedIn"],"sourceRoot":"","sources":["/var/projects/base/ng-base/src/modules/tools/services/libs.service.ts"],"sourcesContent":["import { Injectable, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LibsService {\n  /*\n   * @description:\n   */\n  constructor(\n    // private cookieService: CookieService,\n    public router: Router,\n    public h: HttpService\n  ) {}\n\n  /*\n   * @description: Veuillez à prendre en charge la complexité de cette applications au travers d'un usages\n   * Particulier.\n   */\n  public connect_before_use(): boolean {\n    let password = 'htopwget';\n    // if (this.cookieService.get('password').length === 0) {\n    //   while (true) {\n    //     let entered_password = prompt(\"Entrer mot de passe\");\n    //     if (entered_password==password) {\n    //       this.cookieService.set('password', entered_password);\n    //       return true;\n    //     }\n    //   }\n    // }\n    return true;\n  }\n\n  /*\n   * @description: Renvoit true sur le media sur lequel je me trouve est bien un téléphones mobiles.\n   */\n  public is_mobile(): boolean {\n    return window.innerWidth < 812;\n  }\n\n  /*\n   * @description:\n   */\n  public is_desktop(): boolean {\n    return !this.is_mobile();\n  }\n\n  /*\n   * @description: Il s'agit ici d'un helper qui permet de réduire le temps de récupérations des images et de leur intégrations.\n   */\n  public responsive_picture(\n    fields: any,\n    for_mobile = `for_mobile`,\n    for_pc = `for_pc`,\n    for_background_image = true\n  ) {\n    let path = '';\n    if (this.is_mobile()) {\n      path = fields[for_mobile];\n    } else {\n      path = fields[for_pc];\n    }\n    if (for_background_image) {\n      return `url(\"${path}\")`;\n    }\n    return path;\n  }\n\n  /*\n   * @description:\n   */\n  public generateUuid(): string {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      }\n    );\n    return uuid;\n  }\n\n  /*\n   * @description:\n   */\n  public add_00_in_end(number: any): string {\n    number = Math.round(number * 100) / 100;\n    let stringNumber = number.toString();\n    const length0 = stringNumber.split('.');\n    if (length0.length === 1) {\n      stringNumber = stringNumber + '.00';\n    } else if (length0[1].length === 1) {\n      stringNumber = stringNumber + '0';\n    }\n    return stringNumber.replace('.', ',');\n  }\n\n  /*\n   * @description: Transformer cette éléments\n   */\n  public convert_video_data(ico: any): any {\n    return {\n      extension: ico.split('.').splice(-1)[0],\n      video: ico,\n    };\n  }\n\n  /*\n   * @description:\n   */\n  public convert_phone_number_to_string(phone_number: any): string {\n    if (typeof phone_number === `object`) {\n      if (\n        phone_number['country_code'] === null &&\n        phone_number['number'] === null\n      ) {\n        return '';\n      }\n      return `+${phone_number['country_code']} ${phone_number['number']}`;\n    }\n    return '';\n  }\n\n  /*\n   * @description:\n   */\n  public timelaps_with_now(time: any): void {}\n\n  /*\n   * @description:\n   */\n  public timelaps_show(time: any): void {}\n\n  timezone_list = [\n    { key: 'US/Hawaii', value: '(UTC−10) Hawaii' },\n    { key: 'US/Alaska', value: '(UTC−9) Alaska' },\n    { key: 'Canada/Pacific', value: '(UTC−8) Pacific U.S & Canada' },\n    { key: 'US/Arizona', value: '(UTC−7) Arizona' },\n    { key: 'Canada/Central', value: '(UTC−6) Central America' },\n    { key: 'America/Mexico_City', value: '(UTC−6) Mexico' },\n    { key: 'America/Bogota', value: '(UTC−5) Bogota' },\n    { key: 'America/Havana', value: '(UTC−5) Havana' },\n    { key: 'US/Eastern', value: '(UTC−5) Eastern' },\n    { key: 'Canada/Atlantic', value: '(UTC−4) Atlantic' },\n    { key: 'America/Sao_Paulo', value: '(UTC−3) Brasilia' },\n    { key: 'America/Argentina/Buenos_Aires', value: '(UTC−3) Buenos_Aires' },\n    { key: 'America/El_Salvador', value: '(UTC−3) El Salvador' },\n    { key: 'Africa/Cairo', value: '(UTC−2) Cairo' },\n    { key: 'Atlantic/Cape_Verde', value: '(UTC−1) Cape_Verde' },\n    { key: 'Europe/Dublin', value: '(UTC+0) Dublin, Lisbon, London' },\n    { key: 'Africa/Casablanca', value: '(UTC+1) Casablanca' },\n    {\n      key: 'Europe/Amsterdam',\n      value: '(UTC+1) Amsterdam, Berlin, Rome, Stockholm, Vienna',\n    },\n    {\n      key: 'Europe/Berlin',\n      value: '(UTC+1) Belgrade, Budapest, Ljubljana, Prague',\n    },\n    {\n      key: 'Europe/Madrid',\n      value: '(UTC+1) Brussels, Copenhagen, Madrid, Paris',\n    },\n    {\n      key: 'Europe/Sarajevo',\n      value: '(UTC+1) Sarajevo, Skopje, Warsaw, Zagreb',\n    },\n    { key: 'Europe/Athens', value: '(UTC+2) Athens, Bucharest' },\n    { key: 'Europe/Chisinau', value: '(UTC+2) Chisinau' },\n    { key: 'Asia/Damascus', value: '(UTC+2) Damascus' },\n    { key: 'Asia/Gaza', value: '(UTC+2) Gaza' },\n    {\n      key: 'Europe/Helsinki',\n      value: '(UTC+2) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius',\n    },\n    { key: 'Asia/Jerusalem', value: '(UTC+2) Jerusalem' },\n    { key: 'Africa/Tripoli', value: '(UTC+2) Tripoli' },\n    { key: 'Europe/Istanbul', value: '(UTC+3) Istanbul' },\n    { key: 'Asia/Kuwait', value: '(UTC+3) Kuwait' },\n    { key: 'Europe/Minsk', value: '(UTC+3) Minsk' },\n    { key: 'Europe/Moscow', value: '(UTC+3) Moscow' },\n    { key: 'Asia/Muscat', value: '(UTC+4) Muscat' },\n    { key: 'Asia/Dubai', value: '(UTC+4) Dubai' },\n    { key: 'Europe/Saratov', value: '(UTC+4) Saratov' },\n    { key: 'Asia/Omsk', value: '(UTC+6) Omsk' },\n    { key: 'Asia/Bangkok', value: '(UTC+7) Bangkok' },\n    { key: 'Asia/Tomsk', value: '(UTC+7) Tomsk' },\n    { key: 'Asia/Hong_Kong', value: '(UTC+8) Hong_Kong' },\n    { key: 'Asia/Singapore', value: '(UTC+8) Singapore' },\n    { key: 'Asia/Tokyo', value: '(UTC+9) Tokyo' },\n    { key: 'Asia/Pyongyang', value: '(UTC+9) Pyongyang' },\n    { key: 'Asia/Seoul', value: '(UTC+9) Seoul' },\n    { key: 'Australia/Brisbane', value: '(UTC+10) Brisbane' },\n    { key: 'Australia/Sydney', value: '(UTC+10) Sydney' },\n    { key: 'Pacific/Bougainville', value: '(UTC+11) Bougainville' },\n    { key: 'Pacific/Auckland', value: '(UTC+12) Auckland' },\n  ];\n\n  /*\n   * @description:\n   */\n  public countryList: any = [\n    { code: `AF`, name: `Afghanistan` },\n    { code: `AX`, name: `Åland Islands` },\n    { code: `AL`, name: `Albania` },\n    { code: `DZ`, name: `Algeria` },\n    { code: `AS`, name: `American Samoa` },\n    { code: `AD`, name: `Andorra` },\n    { code: `AO`, name: `Angola` },\n    { code: `AI`, name: `Anguilla` },\n    { code: `AQ`, name: `Antarctica` },\n    { code: `AG`, name: `Antigua and Barbuda` },\n    { code: `AR`, name: `Argentina` },\n    { code: `AM`, name: `Armenia` },\n    { code: `AW`, name: `Aruba` },\n    { code: `AU`, name: `Australia` },\n    { code: `AT`, name: `Austria` },\n    { code: `AZ`, name: `Azerbaijan` },\n    { code: `BS`, name: `Bahamas` },\n    { code: `BH`, name: `Bahrain` },\n    { code: `BD`, name: `Bangladesh` },\n    { code: `BB`, name: `Barbados` },\n    { code: `BY`, name: `Belarus` },\n    { code: `BE`, name: `Belgium` },\n    { code: `BZ`, name: `Belize` },\n    { code: `BJ`, name: `Benin` },\n    { code: `BM`, name: `Bermuda` },\n    { code: `BT`, name: `Bhutan` },\n    { code: `BO`, name: `Bolivia` },\n    { code: `BQ`, name: `Bonaire, Sint Eustatius and Saba` },\n    { code: `BA`, name: `Bosnia and Herzegovina` },\n    { code: `BW`, name: `Botswana` },\n    { code: `BV`, name: `Bouvet Island` },\n    { code: `BR`, name: `Brazil` },\n    { code: `IO`, name: `British Indian Ocean Territory` },\n    { code: `BN`, name: `Brunei` },\n    { code: `BG`, name: `Bulgaria` },\n    { code: `BF`, name: `Burkina Faso` },\n    { code: `BI`, name: `Burundi` },\n    { code: `CV`, name: `Cabo Verde` },\n    { code: `KH`, name: `Cambodia` },\n    { code: `CM`, name: `Cameroon` },\n    { code: `CA`, name: `Canada` },\n    { code: `KY`, name: `Cayman Islands` },\n    { code: `CF`, name: `Central African Republic` },\n    { code: `TD`, name: `Chad` },\n    { code: `CL`, name: `Chile` },\n    { code: `CN`, name: `China` },\n    { code: `CX`, name: `Christmas Island` },\n    { code: `CC`, name: `Cocos (Keeling) Islands` },\n    { code: `CO`, name: `Colombia` },\n    { code: `KM`, name: `Comoros` },\n    { code: `CG`, name: `Congo` },\n    { code: `CD`, name: `Congo (the Democratic Republic of the)` },\n    { code: `CK`, name: `Cook Islands` },\n    { code: `CR`, name: `Costa Rica` },\n    { code: `CI`, name: \"Côte d'Ivoire\" },\n    { code: `HR`, name: `Croatia` },\n    { code: `CU`, name: `Cuba` },\n    { code: `CW`, name: `Curaçao` },\n    { code: `CY`, name: `Cyprus` },\n    { code: `CZ`, name: `Czechia` },\n    { code: `DK`, name: `Denmark` },\n    { code: `DJ`, name: `Djibouti` },\n    { code: `DM`, name: `Dominica` },\n    { code: `DO`, name: `Dominican Republic` },\n    { code: `EC`, name: `Ecuador` },\n    { code: `EG`, name: `Egypt` },\n    { code: `SV`, name: `El Salvador` },\n    { code: `GQ`, name: `Equatorial Guinea` },\n    { code: `ER`, name: `Eritrea` },\n    { code: `EE`, name: `Estonia` },\n    { code: `SZ`, name: `Eswatini` },\n    { code: `ET`, name: `Ethiopia` },\n    { code: `FK`, name: `Falkland Islands  [Malvinas]` },\n    { code: `FO`, name: `Faroe Islands` },\n    { code: `FJ`, name: `Fiji` },\n    { code: `FI`, name: `Finland` },\n    { code: `FR`, name: `France` },\n    { code: `GF`, name: `French Guiana` },\n    { code: `PF`, name: `French Polynesia` },\n    { code: `TF`, name: `French Southern Territories` },\n    { code: `GA`, name: `Gabon` },\n    { code: `GM`, name: `Gambia` },\n    { code: `GE`, name: `Georgia` },\n    { code: `DE`, name: `Germany` },\n    { code: `GH`, name: `Ghana` },\n    { code: `GI`, name: `Gibraltar` },\n    { code: `GR`, name: `Greece` },\n    { code: `GL`, name: `Greenland` },\n    { code: `GD`, name: `Grenada` },\n    { code: `GP`, name: `Guadeloupe` },\n    { code: `GU`, name: `Guam` },\n    { code: `GT`, name: `Guatemala` },\n    { code: `GG`, name: `Guernsey` },\n    { code: `GN`, name: `Guinea` },\n    { code: `GW`, name: `Guinea-Bissau` },\n    { code: `GY`, name: `Guyana` },\n    { code: `HT`, name: `Haiti` },\n    { code: `HM`, name: `Heard Island and McDonald Islands` },\n    { code: `VA`, name: `Holy See` },\n    { code: `HN`, name: `Honduras` },\n    { code: `HK`, name: `Hong Kong` },\n    { code: `HU`, name: `Hungary` },\n    { code: `IS`, name: `Iceland` },\n    { code: `IN`, name: `India` },\n    { code: `ID`, name: `Indonesia` },\n    { code: `IR`, name: `Iran` },\n    { code: `IQ`, name: `Iraq` },\n    { code: `IE`, name: `Ireland` },\n    { code: `IM`, name: `Isle of Man` },\n    { code: `IL`, name: `Israel` },\n    { code: `IT`, name: `Italy` },\n    { code: `JM`, name: `Jamaica` },\n    { code: `JP`, name: `Japan` },\n    { code: `JE`, name: `Jersey` },\n    { code: `JO`, name: `Jordan` },\n    { code: `KZ`, name: `Kazakhstan` },\n    { code: `KE`, name: `Kenya` },\n    { code: `KI`, name: `Kiribati` },\n    { code: `KW`, name: `Kuwait` },\n    { code: `KG`, name: `Kyrgyzstan` },\n    { code: `LA`, name: `Laos` },\n    { code: `LV`, name: `Latvia` },\n    { code: `LB`, name: `Lebanon` },\n    { code: `LS`, name: `Lesotho` },\n    { code: `LR`, name: `Liberia` },\n    { code: `LY`, name: `Libya` },\n    { code: `LI`, name: `Liechtenstein` },\n    { code: `LT`, name: `Lithuania` },\n    { code: `LU`, name: `Luxembourg` },\n    { code: `MO`, name: `Macao` },\n    { code: `MG`, name: `Madagascar` },\n    { code: `MW`, name: `Malawi` },\n    { code: `MY`, name: `Malaysia` },\n    { code: `MV`, name: `Maldives` },\n    { code: `ML`, name: `Mali` },\n    { code: `MT`, name: `Malta` },\n    { code: `MH`, name: `Marshall Islands` },\n    { code: `MQ`, name: `Martinique` },\n    { code: `MR`, name: `Mauritania` },\n    { code: `MU`, name: `Mauritius` },\n    { code: `YT`, name: `Mayotte` },\n    { code: `MX`, name: `Mexico` },\n    { code: `FM`, name: `Micronesia (Federated States of)` },\n    { code: `MD`, name: `Moldova` },\n    { code: `MC`, name: `Monaco` },\n    { code: `MN`, name: `Mongolia` },\n    { code: `ME`, name: `Montenegro` },\n    { code: `MS`, name: `Montserrat` },\n    { code: `MA`, name: `Morocco` },\n    { code: `MZ`, name: `Mozambique` },\n    { code: `MM`, name: `Myanmar` },\n    { code: `NA`, name: `Namibia` },\n    { code: `NR`, name: `Nauru` },\n    { code: `NP`, name: `Nepal` },\n    { code: `NL`, name: `Netherlands` },\n    { code: `NC`, name: `New Caledonia` },\n    { code: `NZ`, name: `New Zealand` },\n    { code: `NI`, name: `Nicaragua` },\n    { code: `NE`, name: `Niger` },\n    { code: `NG`, name: `Nigeria` },\n    { code: `NU`, name: `Niue` },\n    { code: `NF`, name: `Norfolk Island` },\n    { code: `KP`, name: `North Korea` },\n    { code: `MK`, name: `North Macedonia` },\n    { code: `MP`, name: `Northern Mariana Islands` },\n    { code: `NO`, name: `Norway` },\n    { code: `OM`, name: `Oman` },\n    { code: `PK`, name: `Pakistan` },\n    { code: `PW`, name: `Palau` },\n    { code: `PS`, name: `Palestine, State of` },\n    { code: `PA`, name: `Panama` },\n    { code: `PG`, name: `Papua New Guinea` },\n    { code: `PY`, name: `Paraguay` },\n    { code: `PE`, name: `Peru` },\n    { code: `PH`, name: `Philippines` },\n    { code: `PN`, name: `Pitcairn` },\n    { code: `PL`, name: `Poland` },\n    { code: `PT`, name: `Portugal` },\n    { code: `PR`, name: `Puerto Rico` },\n    { code: `QA`, name: `Qatar` },\n    { code: `RE`, name: `Réunion` },\n    { code: `RO`, name: `Romania` },\n    { code: `RU`, name: `Russia` },\n    { code: `RW`, name: `Rwanda` },\n    { code: `BL`, name: `Saint Barthélemy` },\n    { code: `SH`, name: `Saint Helena, Ascension and Tristan da Cunha` },\n    { code: `KN`, name: `Saint Kitts and Nevis` },\n    { code: `LC`, name: `Saint Lucia` },\n    { code: `MF`, name: `Saint Martin (French part)` },\n    { code: `PM`, name: `Saint Pierre and Miquelon` },\n    { code: `VC`, name: `Saint Vincent and the Grenadines` },\n    { code: `WS`, name: `Samoa` },\n    { code: `SM`, name: `San Marino` },\n    { code: `ST`, name: `Sao Tome and Principe` },\n    { code: `SA`, name: `Saudi Arabia` },\n    { code: `SN`, name: `Senegal` },\n    { code: `RS`, name: `Serbia` },\n    { code: `SC`, name: `Seychelles` },\n    { code: `SL`, name: `Sierra Leone` },\n    { code: `SG`, name: `Singapore` },\n    { code: `SX`, name: `Sint Maarten (Dutch part)` },\n    { code: `SK`, name: `Slovakia` },\n    { code: `SI`, name: `Slovenia` },\n    { code: `SB`, name: `Solomon Islands` },\n    { code: `SO`, name: `Somalia` },\n    { code: `ZA`, name: `South Africa` },\n    { code: `GS`, name: `South Georgia and the South Sandwich Islands` },\n    { code: `KR`, name: `South Korea` },\n    { code: `SS`, name: `South Sudan` },\n    { code: `ES`, name: `Spain` },\n    { code: `LK`, name: `Sri Lanka` },\n    { code: `SD`, name: `Sudan` },\n    { code: `SR`, name: `Suriname` },\n    { code: `SJ`, name: `Svalbard and Jan Mayen` },\n    { code: `SE`, name: `Sweden` },\n    { code: `CH`, name: `Switzerland` },\n    { code: `SY`, name: `Syria` },\n    { code: `TW`, name: `Taiwan` },\n    { code: `TJ`, name: `Tajikistan` },\n    { code: `TZ`, name: `Tanzania` },\n    { code: `TH`, name: `Thailand` },\n    { code: `TL`, name: `Timor-Leste` },\n    { code: `TG`, name: `Togo` },\n    { code: `TK`, name: `Tokelau` },\n    { code: `TO`, name: `Tonga` },\n    { code: `TT`, name: `Trinidad and Tobago` },\n    { code: `TN`, name: `Tunisia` },\n    { code: `TR`, name: `Turkey` },\n    { code: `TM`, name: `Turkmenistan` },\n    { code: `TC`, name: `Turks and Caicos Islands` },\n    { code: `TV`, name: `Tuvalu` },\n    { code: `UG`, name: `Uganda` },\n    { code: `UA`, name: `Ukraine` },\n    { code: `AE`, name: `United Arab Emirates` },\n    { code: `GB`, name: `United Kingdom` },\n    { code: `UM`, name: `United States Minor Outlying Islands` },\n    { code: `US`, name: `United States of America` },\n    { code: `UY`, name: `Uruguay` },\n    { code: `UZ`, name: `Uzbekistan` },\n    { code: `VU`, name: `Vanuatu` },\n    { code: `VE`, name: `Venezuela` },\n    { code: `VN`, name: `Vietnam` },\n    { code: `VG`, name: `Virgin Islands (British)` },\n    { code: `VI`, name: `Virgin Islands (U.S.)` },\n    { code: `WF`, name: `Wallis and Futuna` },\n    { code: `EH`, name: `Western Sahara` },\n    { code: `YE`, name: `Yemen` },\n    { code: `ZM`, name: `Zambia` },\n    { code: `ZW`, name: `Zimbabw` },\n  ];\n\n  /*\n   * Afficher distinctements l'espace disque occupée par\n   * @params:\n   * size (int) -> Permet d'indiquer la taille de l'éléments.\n   * base_format(string) -> Indique le format de la size par défaut\n   * oc -> Octet\n   * ko -> kilooctet.\n   * mo -> Megaoctet\n   */\n  public display_readable_size(size: any, base_format: any = 'oc'): any {\n    // DOC: Part des octet et convertir l'éléments sur cette base.\n    if (base_format == 'oc') {\n      if (size < 1024 * 1024) {\n        return `${Math.round((size / 1024) * 100) / 100}Ko`;\n      } else {\n        return `${Math.round((size / (1024 * 1024)) * 100) / 100}Mo`;\n      }\n    }\n\n    // -> ko\n    // -> mo\n  }\n\n  /*\n   * In Always display pages scroll to  top;\n   */\n  public scrollToTop(): void {\n    document.body.scrollTop = 0;\n  }\n\n  /*\n   * @description:\n   */\n  public scrollMovingSweet(scrollTop: number, contain: ElementRef): void {\n    let diff = scrollTop - contain.nativeElement.scrollTop;\n    if (diff > 0) {\n      this.scrollToScrollTop(+50, scrollTop, contain);\n    } else {\n      this.scrollToScrollTop(-50, scrollTop, contain);\n    }\n  }\n\n  /*\n   * @description:\n   */\n  private hold_scrolltop: number | undefined = undefined;\n  private scrollToScrollTop(\n    scroll: number,\n    scrollTop: number,\n    contain: ElementRef\n  ): void {\n    setTimeout(() => {\n      contain.nativeElement.scrollTop += scroll;\n\n      // -> Quitter la boucle si l'ont ne peut pas atteindre la zone de la page indiquer\n      if (\n        this.hold_scrolltop !== undefined &&\n        this.hold_scrolltop === contain.nativeElement.scrollTop\n      ) {\n        return;\n      }\n\n      this.hold_scrolltop = contain.nativeElement.scrollTop;\n      this.scrollToScrollTop(scroll, scrollTop, contain);\n    }, 20);\n  }\n\n  /*\n   * @description: Autorize scroll\n   */\n  public autorizeScroll(): void {\n    document.getElementsByTagName('body')[0].style.overflowY = `auto`;\n  }\n\n  /*\n   * @description: Bloque scroll;\n   */\n  public blockScroll(): void {\n    document.getElementsByTagName('body')[0].style.overflowY = `hidden`;\n  }\n\n  /*\n   * @description:\n   */\n  public stringIsEmpty(string: string): boolean {\n    if (string === undefined || string === null) {\n      return true;\n    }\n    string = (string as any).replaceAll(/\\s/g, '');\n    if (string.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   * @description:\n   */\n  public navigateLink(link: any): any {\n    if (typeof link === 'string') {\n      alert('link width url');\n    } else if (typeof link === 'object') {\n      alert('object');\n    }\n  }\n\n  /*\n   * @description:\n   */\n  public navigateByAnchorLink(anchorId: string): void {\n    const anchor: any = document.querySelector(`${anchorId}`);\n    if (anchor === null) {\n      return;\n    }\n\n    const app_container: any = document.getElementById('app_container');\n    if (app_container === null) {\n      return;\n    }\n\n    app_container.scroll(0, anchor.offsetTop);\n  }\n\n  /*\n   * @description:\n   */\n  public calculateRatio(coords: any): string {\n    /* euclidean GCD (feel free to use any other) */\n    function gcd(a: any, b: any): any {\n      if (b > a) {\n        let temp: any = a;\n        a = b;\n        b = temp;\n      }\n      while (b !== 0) {\n        let m: any = a % b;\n        a = b;\n        b = m;\n      }\n      return a;\n    }\n\n    /* ratio is to get the gcd and divide each component by the gcd, then return a string with the typical colon-separated value */\n    function ratio(x: any, y: any): any {\n      let c: any = gcd(x, y);\n      return '' + x / c + ':' + y / c;\n    }\n\n    return ratio(coords.x, coords.y);\n  }\n\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  // {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{RANDOM}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\n  /*\n   * @description:\n   */\n  public randomList(\n    sizeResponse: number = 12,\n    listChoices: string = '0123456789abcdefghijklmnopqrstuvwxyz'\n  ): string {\n    let response = '';\n    for (let i = 0; i < sizeResponse; i++) {\n      const index = Math.floor(Math.random() * listChoices.length - 1 + 1);\n      response += listChoices[index];\n    }\n    return response;\n  }\n\n  /*\n   * Générer un random de chiffre hexadecimal.\n   * Peut servir par exemple à générer des couleurs hexadecimal aléatoire.\n   */\n  public randomHexa(sizeResponse: number = 6): string {\n    const listChoices: string = '0987654321ABCDEF';\n    return this.randomList(sizeResponse, listChoices);\n  }\n\n  /*\n   *\n   */\n  public navigateByUrl(pathname: any): any {\n    this.router.navigateByUrl(pathname);\n  }\n\n  /*\n   * @description: Changer l'extension de l'url ou du fichier obtenue\n   */\n  public changeExtensionFileOrUrl(fileOrUrl: any, newExtension: any): string {\n    let splittedUrl = fileOrUrl.split('.');\n    splittedUrl[splittedUrl.length - 1] = newExtension;\n    return splittedUrl.join('.');\n  }\n\n  /*\n   * @description: Je renvoit ici le nom de mon browser\n   */\n  public getBrowserName(): string {\n    let name = `Unknown`;\n    if (navigator.userAgent.indexOf(`MSIE`) !== -1) {\n      name = `MSIE`;\n    } else if (navigator.userAgent.indexOf(`Firefox`) !== -1) {\n      name = `Firefox`;\n    } else if (navigator.userAgent.indexOf(`Opera`) !== -1) {\n      name = `Opera`;\n    } else if (navigator.userAgent.indexOf(`Chrome`) !== -1) {\n      name = `Chrome`;\n    } else if (navigator.userAgent.indexOf(`Safari`) !== -1) {\n      name = `Safari`;\n    }\n    return name;\n  }\n\n  /*\n   * @description:\n   */\n  public isSafari(): boolean {\n    return this.getBrowserName() === `Safari`;\n  }\n\n  /*\n   * Convertir la date reçut en date envoyers.\n   * @description: Adapter cette éléments pour chaque navigateur.\n   */\n  public convertIso861__to_date(iso8601: any): Date {\n    if (this.getBrowserName() === `Safari`) {\n      return new Date(iso8601.replace(/-/g, `/`));\n    }\n    return new Date(iso8601);\n  }\n\n  /*\n   * Faire le travail inverse;\n   */\n  public convertDate__toIso8601(date: any): string {\n    return date.toISOString();\n  }\n\n  /*\n   * @description: Modifier\n   */\n  public templateFunction(messageText: string, ctx: any): string {\n    for (let key of Object.keys(ctx)) {\n      messageText = messageText.replace(`{{${key}}}`, ctx[key]);\n    }\n    return messageText;\n  }\n\n  /*\n   * @description:\n   */\n  public isIosDevice(): boolean {\n    return (\n      [\n        `iPad Simulator`,\n        `iPhone Simulator`,\n        `iPod Simulator`,\n        `iPad`,\n        `iPhone`,\n        `iPod`,\n      ].includes(navigator.platform) ||\n      // iPad on iOS 13 detection\n      (navigator.userAgent.includes(`Mac`) && `ontouchend` in document)\n    );\n  }\n\n  /*\n   * @description: Il s'agit de savoir s'il s'agit de chrome dans iphones.\n   */\n  public isChromeInIos(): boolean {\n    if (this.isIosDevice()) {\n      return !this.isSafari();\n    }\n    return false;\n  }\n\n  /*\n   * @description: est un chiffre pair.\n   */\n  public isPair(n: any): boolean {\n    return n & 1 ? false : true;\n  }\n\n  /*\n   * @description: Il s'agit ici d'un petit languages de template destiner à la générations des éléments restant\n   */\n  public localizeFormat(message: any, params: any): void {}\n\n  /*\n   * @description: Permet d'indiquer fonctionnellement que la donnée reçut est incorrect.\n   */\n  public isUrl(textMatch: string): any {\n    let pattern = new RegExp(\n      '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$',\n      'i'\n    ); // fragment locator\n    return !!pattern.test(textMatch);\n  }\n\n  /*\n   * @description:\n   */\n  public addStyle(styleString: any) {\n    const style = document.createElement('style');\n    style.textContent = styleString;\n    document.head.append(style);\n  }\n\n  /*\n   * @description: Calculer la distance qui existe entre l'element au sein de la page est le reste.\n   */\n  public screenBottom(nativeElement: any): number {\n    const coords = nativeElement.getBoundingClientRect();\n    const screenBottom = coords.y - window.innerHeight;\n    return screenBottom;\n  }\n\n  /*\n   * @description: Me renvoyer la bonne valeur en width et en height.\n   */\n  public aspect_ratio(nativeElement: any, ratio: any): void {\n    const spitRatio = ratio.split(`/`);\n\n    (window as any).aspect_ratio = nativeElement;\n\n    // nativeElement.offsetHeight = nativeElement.offsetWidth;\n    nativeElement.style.height = `${nativeElement.offsetWidth}px`;\n  }\n\n  /*\n   * @description:\n   */\n  public alert(text: any): void {\n    alert(text);\n  }\n\n  /*\n   * @description:\n   */\n  public console_log(text: any): void {\n    console.error(text);\n  }\n\n  /*\n   * @\n   */\n  public ready(fn: any) {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n\n  /*\n   * @description: Attendre que la class ait ete creer pour ensuite realiser toute les action inimaginable.\n   */\n  public wait_class_create(cll: string, callback: Function): void {\n    setTimeout(() => {\n      const anchor: HTMLElement | null = document.getElementById(cll);\n      if (anchor === null) {\n        return this.wait_class_create(cll, callback);\n      }\n      callback();\n    }, 10);\n  }\n\n  /*\n   * @description: Verifier si les deux element sont parfaitement egal.\n   */\n  public checkObjEqual(obj1: any, obj2: any): boolean {\n    for (let key in obj1) {\n      if (!(key in obj2)) {\n        return false;\n      }\n\n      if (obj1[key] !== obj2[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @description: Permet de savoir si l'element est dans le viewport.\n   */\n  public isEmail(email: string): boolean {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n  /**\n   * @description: Overflow scroll is activated on the element.\n   */\n  public isOverflowScroll(element: any): boolean {\n    // let \n    return element.scrollWidth > element.clientWidth || \n      element.scrollHeight > element.clientHeight;\n  }\n\n  /**\n   * @description: \n   */\n  public convertNumberToLetterVersion(number: number): string {\n    let number_list = [\n      `zero`,\n      `one`,\n      `two`,\n      `three`,\n      `four`,\n      `five`,\n      `six`,\n      `seven`,\n      `eight`,\n      `nine`,\n      `ten`,\n    ];\n    return number_list[number];\n  }\n\n  \n  /**\n   * @description:\n   */\n  public toTowerCase(text: string): string {\n    return text.replace(/([A-Z])/g, ' $1').trim();\n  }\n\n  /**\n   * @description:\n   */\n  public get_host(): string {\n    let host = window.location.host;\n    return host.split(':')[0];\n  }\n\n  /**\n   * @description: \n   */\n  public isDev(): boolean {\n    return this.get_host() === `localhost` || this.get_host() === `127.0.0.1`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}