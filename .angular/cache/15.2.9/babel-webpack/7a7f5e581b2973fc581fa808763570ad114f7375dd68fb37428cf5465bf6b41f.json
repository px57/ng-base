{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/modules/chatroom/services/chatroom.service\";\nimport * as i2 from \"src/modules/profile/services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"messages_container\"];\nconst _c1 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\nfunction ChatroomComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11);\n    i0.ɵɵelement(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"span\", 13)(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c1, \"url(\" + ctx_r1.userService.get_avatar(message_r2.profile).src + \")\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" @\", message_r2.profile.username, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", message_r2.content, \" \");\n  }\n}\n;\nexport let ChatroomComponent = /*#__PURE__*/(() => {\n  var _class;\n  class ChatroomComponent {\n    /**\n     * @description:\n     */\n    constructor(chatroomService, userService) {\n      this.chatroomService = chatroomService;\n      this.userService = userService;\n      /**\n       * @description:\n       */\n      this.max_messages = 100;\n      /**\n       * @description:\n       */\n      this.messages = [];\n      /**\n       * @description:\n       */\n      this.new_message = '';\n      /**\n       * @description:\n       */\n      this.participants_counter = 0;\n    }\n    /**\n     * @description:\n     */\n    ngOnInit() {\n      this.bindStreamChatroom();\n    }\n    /**\n     * @description:\n     */\n    bindStreamChatroom() {\n      this.chatroomService.stream.subscribe(data => {\n        let event_key = 'recept__' + data.event;\n        if (this[event_key] === undefined) {\n          alert(event_key + ' is not defined in Chatroom.component.ts');\n        }\n        this[event_key](data.data);\n      });\n    }\n    /**\n     * @description:\n     */\n    ngOnDestroy() {}\n    /**\n     * @description:\n     */\n    sendMessage() {\n      if (!this.userService.is_authenticated()) {\n        this.userService.open_login_modal();\n        return;\n      }\n      ;\n      this.chatroomService.send_message(this.new_message);\n      this.new_message = '';\n    }\n    // @@@@@@@@@@@@@@\n    /**\n     * @description:\n     */\n    recept__participants_counter(participants_counter) {\n      this.participants_counter = participants_counter;\n    }\n    /**\n     * @description:\n     */\n    recept__messages(messages) {\n      this.messages = messages;\n      this.waitToScrollToBottom();\n    }\n    /**\n     * @description:\n     */\n    recept__new_message(message) {\n      this.messages.push(message);\n      this.waitToScrollToBottom();\n      // TODO: Limit the number of messages in the chatroom, and delete the oldest ones. (100 max)\n      // if (this.messages.length > this.max_messages) {\n      //   this.messages.shift();\n      // }\n    }\n    /**\n     * @description:\n     */\n    waitToScrollToBottom() {\n      setTimeout(() => {\n        this.forceScrollToBottom();\n      }, 100);\n    }\n    /**\n     * @description:\n     */\n    forceScrollToBottom() {\n      this.messages_container.nativeElement.scrollTop = 100000;\n    }\n  }\n  _class = ChatroomComponent;\n  _class.ɵfac = function ChatroomComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ChatroomService), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-chatroom\"]],\n    viewQuery: function ChatroomComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messages_container = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"chatroom_container\"], [1, \"chatroom_header\"], [1, \"percent50_inline_blocks\"], [1, \"flex-block\"], [1, \"participants\"], [1, \"message_list_container\"], [\"messages_container\", \"\"], [\"class\", \"message_container\", 4, \"ngFor\", \"ngForOf\"], [1, \"message_input_container\"], [\"type\", \"text\", \"placeholder\", \"Type your message here...\", 1, \"message_input\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"message_container\"], [1, \"user_profile_container\"], [1, \"avatar\", 3, \"ngStyle\"], [1, \"username-container\"]],\n    template: function ChatroomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n        i0.ɵɵtext(5, \"Chat\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"p\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"div\", 5, 6);\n        i0.ɵɵtemplate(12, ChatroomComponent_div_12_Template, 8, 5, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatroomComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.new_message = $event;\n        })(\"keyup.enter\", function ChatroomComponent_Template_input_keyup_enter_14_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"\", ctx.participants_counter, \" - participants\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.new_message);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgStyle, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\".chatroom_container[_ngcontent-%COMP%]{height:100%}.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%]{height:10%;padding-left:10px;padding-right:10px}.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{align-self:center;color:#fff;display:inline-block;font-size:1.2em}.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%]   .participants[_ngcontent-%COMP%]{color:#f9f9f9;right:13px;position:absolute;align-self:center}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]{clear:both;height:75%;color:#fff;overflow:auto;overflow-x:hidden;margin-left:10px;margin-right:10px;border-top:1px solid #544b4b}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]:first-child{margin-top:20px}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]{margin-right:15px}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-left:39px;margin-bottom:13px;word-break:break-word}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%]{height:30px;width:30px;background-color:#000;border-radius:50px;display:flex;float:left;background-size:contain}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .username-container[_ngcontent-%COMP%]{vertical-align:middle;display:flex;padding-left:10px;overflow:hidden;height:30px;width:70%;white-space:nowrap;text-overflow:ellipsis}.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .username-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{align-self:center}.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%]{height:15%}.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:69%;width:83%;border-radius:51px;border:none;padding-left:5%;padding-right:5%;background:rgba(93,93,93,.65);margin:3%;color:#fff;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);font-weight:600}.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border:1px solid rgba(93,93,93,.65);background-color:#000}\"]\n  });\n  return ChatroomComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}