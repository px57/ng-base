{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/modules/chatroom/services/chatroom.service\";\nimport * as i2 from \"src/modules/profile/services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"messages_container\"];\nconst _c1 = function (a0) {\n  return {\n    \"background-image\": a0\n  };\n};\nfunction ChatroomComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11);\n    i0.ɵɵelement(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"span\", 13)(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c1, \"url(\" + ctx_r1.userService.get_avatar(message_r2.profile).src + \")\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" @\", message_r2.profile.username, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", message_r2.content, \" \");\n  }\n}\n;\nexport class ChatroomComponent {\n  /**\n   * @description:\n   */\n  constructor(chatroomService, userService) {\n    this.chatroomService = chatroomService;\n    this.userService = userService;\n    /**\n     * @description:\n     */\n    this.max_messages = 100;\n    /**\n     * @description:\n     */\n    this.messages = [];\n    /**\n     * @description:\n     */\n    this.new_message = '';\n    /**\n     * @description:\n     */\n    this.participants_counter = 0;\n  }\n  /**\n   * @description:\n   */\n  ngOnInit() {\n    this.bindStreamChatroom();\n  }\n  /**\n   * @description:\n   */\n  bindStreamChatroom() {\n    this.chatroomService.stream.subscribe(data => {\n      let event_key = 'recept__' + data.event;\n      if (this[event_key] === undefined) {\n        alert(event_key + ' is not defined in Chatroom.component.ts');\n      }\n      this[event_key](data.data);\n    });\n  }\n  /**\n   * @description:\n   */\n  ngOnDestroy() {}\n  /**\n   * @description:\n   */\n  sendMessage() {\n    if (!this.userService.is_authenticated()) {\n      this.userService.open_login_modal();\n      return;\n    }\n    ;\n    this.chatroomService.call__send_message(this.new_message);\n    this.new_message = '';\n  }\n  // @@@@@@@@@@@@@@\n  /**\n   * @description:\n   */\n  recept__participants_counter(participants_counter) {\n    this.participants_counter = participants_counter;\n  }\n  /**\n   * @description:\n   */\n  recept__messages(messages) {\n    this.messages = messages;\n    this.waitToScrollToBottom();\n  }\n  /**\n   * @description:\n   */\n  recept__new_message(message) {\n    this.messages.push(message);\n    this.waitToScrollToBottom();\n    // TODO: Limit the number of messages in the chatroom, and delete the oldest ones. (100 max)\n    // if (this.messages.length > this.max_messages) {\n    //   this.messages.shift();\n    // }\n  }\n  /**\n   * @description:\n   */\n  waitToScrollToBottom() {\n    setTimeout(() => {\n      this.forceScrollToBottom();\n    }, 100);\n  }\n  /**\n   * @description:\n   */\n  forceScrollToBottom() {\n    this.messages_container.nativeElement.scrollTop = 100000;\n  }\n}\n_class = ChatroomComponent;\n_class.ɵfac = function ChatroomComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ChatroomService), i0.ɵɵdirectiveInject(i2.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-chatroom\"]],\n  viewQuery: function ChatroomComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messages_container = _t.first);\n    }\n  },\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"chatroom_container\"], [1, \"chatroom_header\"], [1, \"percent50_inline_blocks\"], [1, \"flex-block\"], [1, \"participants\"], [1, \"message_list_container\"], [\"messages_container\", \"\"], [\"class\", \"message_container\", 4, \"ngFor\", \"ngForOf\"], [1, \"message_input_container\"], [\"type\", \"text\", \"placeholder\", \"Type your message here...\", 1, \"message_input\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"message_container\"], [1, \"user_profile_container\"], [1, \"avatar\", 3, \"ngStyle\"], [1, \"username-container\"]],\n  template: function ChatroomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n      i0.ɵɵtext(5, \"Chat\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"p\", 4);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"div\", 5, 6);\n      i0.ɵɵtemplate(12, ChatroomComponent_div_12_Template, 8, 5, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatroomComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.new_message = $event;\n      })(\"keyup.enter\", function ChatroomComponent_Template_input_keyup_enter_14_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate1(\"\", ctx.participants_counter, \" - participants\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.new_message);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgStyle, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\".chatroom_container[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%] {\\n  height: 10%;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  align-self: center;\\n  color: white;\\n  display: inline-block;\\n  font-size: 1.2em;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .chatroom_header[_ngcontent-%COMP%]   .participants[_ngcontent-%COMP%] {\\n  color: #f9f9f9;\\n  right: 13px;\\n  position: absolute;\\n  align-self: center;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%] {\\n  clear: both;\\n  height: 75%;\\n  color: white;\\n  overflow: auto;\\n  overflow-x: hidden;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  border-top: 1px solid #544b4b;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]:first-child {\\n  margin-top: 20px;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%] {\\n  margin-right: 15px;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-left: 39px;\\n  margin-bottom: 13px;\\n  word-break: break-word;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 30px;\\n  background-color: black;\\n  border-radius: 50px;\\n  display: flex;\\n  float: left;\\n  background-size: contain;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .username-container[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n  display: flex;\\n  padding-left: 10px;\\n  overflow: hidden;\\n  height: 30px;\\n  width: 70%;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_list_container[_ngcontent-%COMP%]   .message_container[_ngcontent-%COMP%]   .user_profile_container[_ngcontent-%COMP%]   .username-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  align-self: center;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%] {\\n  height: 15%;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  height: 69%;\\n  width: 83%;\\n  border-radius: 51px;\\n  border: none;\\n  padding-left: 5%;\\n  padding-right: 5%;\\n  background: rgba(93, 93, 93, 0.65);\\n  margin: 3%;\\n  color: white;\\n  -webkit-backdrop-filter: blur(5px);\\n          backdrop-filter: blur(5px);\\n  font-weight: 600;\\n}\\n.chatroom_container[_ngcontent-%COMP%]   .message_input_container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border: 1px solid rgba(93, 93, 93, 0.65);\\n  background-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2NoYXRyb29tL2NvbXBvbmVudHMvY2hhdHJvb20vY2hhdHJvb20uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxZQUFBO0FBQUo7QUFFSTtFQUNJLFdBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBQVI7QUFHUTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7QUFEWjtBQUdRO0VBQ0ksY0FBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FBRFo7QUFLSTtFQUNJLFdBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSw2QkFBQTtBQUhSO0FBS1E7RUFDSSxnQkFBQTtBQUhaO0FBS1E7RUFDSSxrQkFBQTtBQUhaO0FBS1k7RUFDSSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7QUFIaEI7QUFRZ0I7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLHdCQUFBO0FBTnBCO0FBUWdCO0VBQ0ksc0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0VBRUEsbUJBQUE7RUFDQSx1QkFBQTtBQVBwQjtBQVVvQjtFQUNJLGtCQUFBO0FBUnhCO0FBZUk7RUFDSSxXQUFBO0FBYlI7QUFlUTtFQUNJLFdBQUE7RUFDQSxVQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtDQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSxrQ0FBQTtVQUFBLDBCQUFBO0VBQ0EsZ0JBQUE7QUFiWjtBQWdCWTtFQUNJLGFBQUE7RUFDQSx3Q0FBQTtFQUNBLHVCQUFBO0FBZGhCIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXRyb29tX2NvbnRhaW5lciB7XG4gICAgLy8gYmFja2dyb3VuZDogcmVkO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIC5jaGF0cm9vbV9oZWFkZXIge1xuICAgICAgICBoZWlnaHQ6IDEwJTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgICBcblxuICAgICAgICBoMSB7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgICB9XG4gICAgICAgIC5wYXJ0aWNpcGFudHMge1xuICAgICAgICAgICAgY29sb3I6ICNmOWY5Zjk7XG4gICAgICAgICAgICByaWdodDogMTNweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5tZXNzYWdlX2xpc3RfY29udGFpbmVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICAgIGhlaWdodDogNzUlO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNTQ0YjRiO1xuXG4gICAgICAgIC5tZXNzYWdlX2NvbnRhaW5lcjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIC5tZXNzYWdlX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG5cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzOXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgICAgICAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnVzZXJfcHJvZmlsZV9jb250YWluZXIge1xuXG4gICAgICAgICAgICAgICAgLmF2YXRhciB7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudXNlcm5hbWUtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgICAgICAgICAgICAgIC8vIGFkZCAuLi4gd2hlbiB0ZXh0IGlzIHRvbyBsb25nXG4gICAgICAgICAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy8gYmFja2dyb3VuZDogcmVkO1xuICAgICAgICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5tZXNzYWdlX2lucHV0X2NvbnRhaW5lciB7XG4gICAgICAgIGhlaWdodDogMTUlO1xuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgIGhlaWdodDogNjklO1xuICAgICAgICAgICAgd2lkdGg6IDgzJTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUxcHg7XG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDUlO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogNSU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2IoOTMgOTMgOTMgLyA2NSUpO1xuICAgICAgICAgICAgbWFyZ2luOiAzJTtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcblxuXG4gICAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoOTMsIDkzLCA5MywgMC42NSk7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;IAiBQA,+BAE8B;IAEtBA,0BAIS;IAETA,gCAAiC;IAEzBA,YACJ;IAAAA,iBAAO;IAGfA,yBAAG;IAAAA,YAAsB;IAAAA,iBAAI;;;;;IAVzBA,eAEE;IAFFA,0HAEE;IAIMA,eACJ;IADIA,6DACJ;IAGLA,eAAsB;IAAtBA,kDAAsB;;;AChBpC;AAQD,OAAM,MAAOC,iBAAiB;EA0B5B;;;EAGAC,YACUC,eAAgC,EACjCC,WAAwB;IADvB,oBAAe,GAAfD,eAAe;IAChB,gBAAW,GAAXC,WAAW;IAzBpB;;;IAGO,iBAAY,GAAW,GAAG;IAEjC;;;IAGO,aAAQ,GAAmB,EAAE;IAEpC;;;IAGO,gBAAW,GAAW,EAAE;IAE/B;;;IAGO,yBAAoB,GAAW,CAAC;EAQnC;EAEJ;;;EAGOC,QAAQ;IACb,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEA;;;EAGQA,kBAAkB;IACxB,IAAI,CAACH,eAAe,CAACI,MAAM,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC7C,IAAIC,SAAS,GAAG,UAAU,GAAGD,IAAI,CAACE,KAAK;MACvC,IAAK,IAAY,CAACD,SAAS,CAAC,KAAKE,SAAS,EAAE;QAC1CC,KAAK,CAACH,SAAS,GAAG,0CAA0C,CAAC;;MAE9D,IAAY,CAACA,SAAS,CAAC,CAACD,IAAI,CAACA,IAAI,CAAC;IACrC,CAAC,CAAC;EACJ;EAEA;;;EAGOK,WAAW,IAElB;EAEA;;;EAGOC,WAAW;IAChB,IAAI,CAAC,IAAI,CAACX,WAAW,CAACY,gBAAgB,EAAE,EAAE;MACxC,IAAI,CAACZ,WAAW,CAACa,gBAAgB,EAAE;MACnC;;IACD;IACD,IAAI,CAACd,eAAe,CAACe,kBAAkB,CAAC,IAAI,CAACC,WAAW,CAAC;IACzD,IAAI,CAACA,WAAW,GAAG,EAAE;EACvB;EAEA;EACA;;;EAGOC,4BAA4B,CAACC,oBAA4B;IAC9D,IAAI,CAACA,oBAAoB,GAAGA,oBAAoB;EAClD;EAEA;;;EAGOC,gBAAgB,CAACC,QAAwB;IAC9C,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEA;;;EAGOC,mBAAmB,CAACC,OAAgB;IACzC,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;IAC3B,IAAI,CAACF,oBAAoB,EAAE;IAC3B;IACA;IACA;IACA;EACF;EAEA;;;EAGQA,oBAAoB;IAC1BI,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,mBAAmB,EAAE;IAC5B,CAAC,EAAE,GAAG,CAAC;EACT;EAEA;;;EAGQA,mBAAmB;IACzB,IAAI,CAACC,kBAAkB,CAACC,aAAa,CAACC,SAAS,GAAG,MAAM;EAC1D;;SAnHW/B,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAgC;EAAAC;IAAA;;;;;;;;;;;;;MDzB9BlC,8BAAgC;MAIZA,oBAAI;MAAAA,iBAAK;MAGrBA,8BAAqC;MAGPA,YAAuC;MAAAA,iBAAI;MAI7EA,kCAEwB;MACpBA,oEAiBM;MACVA,iBAAM;MACNA,+BAAqC;MAI7BA;QAAA;MAAA,EAAyB;QAAA,OACVmC,iBAAa;MAAA,EADH;MAH7BnC,iBAK4C;;;MAhCdA,eAAuC;MAAvCA,sEAAuC;MAQ7CA,eAAW;MAAXA,sCAAW;MAsB/BA,eAAyB;MAAzBA,yCAAyB","names":["i0","ChatroomComponent","constructor","chatroomService","userService","ngOnInit","bindStreamChatroom","stream","subscribe","data","event_key","event","undefined","alert","ngOnDestroy","sendMessage","is_authenticated","open_login_modal","call__send_message","new_message","recept__participants_counter","participants_counter","recept__messages","messages","waitToScrollToBottom","recept__new_message","message","push","setTimeout","forceScrollToBottom","messages_container","nativeElement","scrollTop","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/var/projects/base/ng-base/src/modules/chatroom/components/chatroom/chatroom.component.html","/var/projects/base/ng-base/src/modules/chatroom/components/chatroom/chatroom.component.ts"],"sourcesContent":["<div class=\"chatroom_container\">\n    <div class=\"chatroom_header\">\n        <div class=\"percent50_inline_blocks\">\n            <div class=\"flex-block\">\n                <h1>Chat</h1>\n            </div>\n        </div>\n        <div class=\"percent50_inline_blocks\">\n            <div class=\"flex-block\">\n                <p\n                 class=\"participants\">{{participants_counter}} - participants</p>\n            </div>\n        </div>\n    </div>\n    <div \n        class=\"message_list_container\"\n        #messages_container>\n        <div \n            *ngFor=\"let message of messages\"\n            class=\"message_container\">\n            <div class=\"user_profile_container\">\n                <div \n                class=\"avatar\"\n                [ngStyle]=\"{\n                    'background-image': 'url(' + userService.get_avatar(message.profile).src + ')'\n                }\"></div>\n\n                <span class=\"username-container\">\n                    <span>\n                        @{{message.profile.username}}\n                    </span>\n                </span>\n            </div>\n            <p>{{ message.content }} </p>\n        </div>\n    </div>\n    <div class=\"message_input_container\">\n        <input \n            type=\"text\" \n            class=\"message_input\"\n            [(ngModel)]=\"new_message\"\n            (keyup.enter)=\"sendMessage()\"\n            placeholder=\"Type your message here...\">\n    </div>  \n</div>","import { \n  Component,\n  ViewChild\n} from '@angular/core';\nimport { ChatroomService } from 'src/modules/chatroom/services/chatroom.service';\nimport { Profile } from 'src/modules/profile/services/user.service';\nimport { UserService } from 'src/modules/profile/services/user.service';\n\n/**\n * @description: \n */\nexport interface Message {\n  id: number,\n  activated: boolean,\n  content: string,\n  chatroom: number,\n  profile: Profile,\n};\n\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.scss']\n})\nexport class ChatroomComponent {\n  /**\n   * @description: \n   */\n  @ViewChild('messages_container') messages_container: any;\n\n  /**\n   * @description:\n   */\n  public max_messages: number = 100;\n\n  /**\n   * @description:\n   */\n  public messages: Array<Message> = [];\n\n  /**\n   * @description: \n   */\n  public new_message: string = '';\n\n  /**\n   * @description: \n   */\n  public participants_counter: number = 0;\n\n  /**\n   * @description:\n   */\n  constructor(\n    private chatroomService: ChatroomService,\n    public userService: UserService,\n  ) { }\n\n  /**\n   * @description:\n   */\n  public ngOnInit(): void {\n    this.bindStreamChatroom();\n  }\n\n  /**\n   * @description:\n   */\n  private bindStreamChatroom(): void {\n    this.chatroomService.stream.subscribe((data) => {\n      let event_key = 'recept__' + data.event;\n      if ((this as any)[event_key] === undefined) {\n        alert(event_key + ' is not defined in Chatroom.component.ts');\n      }\n      (this as any)[event_key](data.data);\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public ngOnDestroy(): void {\n\n  }\n\n  /**\n   * @description: \n   */\n  public sendMessage(): void {\n    if (!this.userService.is_authenticated()) {\n      this.userService.open_login_modal();\n      return; \n    };\n    this.chatroomService.call__send_message(this.new_message);\n    this.new_message = '';\n  }\n\n  // @@@@@@@@@@@@@@\n  /**\n   * @description:\n   */\n  public recept__participants_counter(participants_counter: number): void {\n    this.participants_counter = participants_counter;\n  }\n\n  /**\n   * @description:\n   */\n  public recept__messages(messages: Array<Message>): void {\n    this.messages = messages;\n    this.waitToScrollToBottom();\n  }\n\n  /**\n   * @description:\n   */\n  public recept__new_message(message: Message): void {\n    this.messages.push(message);\n    this.waitToScrollToBottom();\n    // TODO: Limit the number of messages in the chatroom, and delete the oldest ones. (100 max)\n    // if (this.messages.length > this.max_messages) {\n    //   this.messages.shift();\n    // }\n  }\n\n  /**\n   * @description:\n   */\n  private waitToScrollToBottom(): void {\n    setTimeout(() => {\n      this.forceScrollToBottom();\n    }, 100);\n  }\n\n  /**\n   * @description:\n   */\n  private forceScrollToBottom(): void {\n    this.messages_container.nativeElement.scrollTop = 100000;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}