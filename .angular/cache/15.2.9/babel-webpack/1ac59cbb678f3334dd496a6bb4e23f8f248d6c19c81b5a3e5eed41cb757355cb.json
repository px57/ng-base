{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/modules/modal/services/switch-modal.service\";\nimport * as i2 from \"src/modules/tools/services/http.service\";\nimport * as i3 from \"@angular/forms\";\nexport class SigninComponent {\n  constructor(switchModalService, httpService) {\n    this.switchModalService = switchModalService;\n    this.httpService = httpService;\n    /**\n     * @description:\n     */\n    this.SigninSuccess = new EventEmitter();\n    /**\n     * @description:\n     */\n    this.label = '';\n    this.formGroup = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n  /**\n   * @description:\n   */\n  ngOnInit() {\n    setInterval(() => {\n      console.log(this.label);\n    }, 100);\n  }\n  /**\n   * @description:\n   */\n  submit() {\n    if (this.formGroup.invalid) {\n      return;\n    }\n    // -> [API] - Signin\n    const params = {\n      identifier: this.formGroup.value.email,\n      password: this.formGroup.value.password\n    };\n    this.httpService.post('auth/signin', params).subscribe(response => {\n      if (!response.success) {\n        return;\n      }\n      alert('send success');\n      this.SigninSuccess.emit(response);\n    });\n  }\n}\n_class = SigninComponent;\n_class.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.SwitchModalService), i0.ɵɵdirectiveInject(i2.HttpService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signin\"]],\n  inputs: {\n    label: \"label\"\n  },\n  outputs: {\n    SigninSuccess: \"SigninSuccess\"\n  },\n  decls: 18,\n  vars: 1,\n  consts: [[1, \"signin_container\", \"auth_container\"], [\"src\", \"/assets/img/logo.svg\", \"alt\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email address\", \"required\", \"\"], [1, \"forget_password\", 3, \"click\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"type\", \"submit\", \"value\", \"Sign in\", 1, \"bg_central_button_gradient\"], [3, \"click\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Sign in to your account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementStart(8, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function SigninComponent_Template_a_click_8_listener() {\n        return ctx.switchModalService.open_modal(\"forget_password\");\n      });\n      i0.ɵɵtext(9, \"Forgot password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7)(13, \"input\", 8);\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15, \" Not a member? \");\n      i0.ɵɵelementStart(16, \"a\", 9);\n      i0.ɵɵlistener(\"click\", function SigninComponent_Template_a_click_16_listener() {\n        return ctx.switchModalService.open_modal(\"signup\");\n      });\n      i0.ɵɵtext(17, \"Start a 14 day free trial\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".forget_password[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL3Byb2ZpbGUvY29tcG9uZW50cy9zaWduaW4vc2lnbmluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcmdldF9wYXNzd29yZCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";AAAA,SAIIA,YAAY,QAET,eAAe;AAGtB,SAASC,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;;AAQvD,OAAM,MAAOC,eAAe;EAkB1BC,YACSC,kBAAsC,EACtCC,WAAwB;IADxB,uBAAkB,GAAlBD,kBAAkB;IAClB,gBAAW,GAAXC,WAAW;IAnBpB;;;IAIO,kBAAa,GAAsB,IAAIN,YAAY,EAAO;IAEjE;;;IAIO,UAAK,GAAW,EAAE;IAWvB,IAAI,CAACO,SAAS,GAAG,IAAIN,SAAS,CAAC;MAC7BO,KAAK,EAAE,IAAIN,WAAW,CAAC,EAAE,CAAC;MAC1BO,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE;KAC7B,CAAC;EACJ;EAEA;;;EAGOQ,QAAQ;IACbC,WAAW,CAAC,MAAK;MACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACT;EAEA;;;EAGOC,MAAM;IACX,IAAI,IAAI,CAACR,SAAS,CAACS,OAAO,EAAE;MAAE;;IAE9B;IACA,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,IAAI,CAACX,SAAS,CAACY,KAAK,CAACX,KAAK;MACtCC,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACY,KAAK,CAACV;KAChC;IACD,IAAI,CAACH,WAAW,CAACc,IAAI,CAAC,aAAa,EAAEH,MAAM,CAAC,CAACI,SAAS,CAAEC,QAAa,IAAI;MACvE,IAAI,CAACA,QAAQ,CAACC,OAAO,EAAE;QACrB;;MAGFC,KAAK,CAAE,cAAc,CAAC;MACtB,IAAI,CAACC,aAAa,CAACC,IAAI,CAACJ,QAAQ,CAAC;IACnC,CAAC,CAAC;EACJ;;SAxDWnB,eAAe;;mBAAfA,MAAe;AAAA;;QAAfA,MAAe;EAAAwB;EAAAC;IAAAd;EAAA;EAAAe;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCf5BC,8BAA6C;MACzCA,yBAAuC;MACvCA,0BAAI;MAAAA,uCAAuB;MAAAA,iBAAK;MAChCA,+BAE0B;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MACrBD,gCAAmB;MAAAA,6BAAa;MAAAA,iBAAQ;MACxCA,2BAKa;MAEbA,4BAE4B;MADxBA;QAAA,OAASC,kCAA8B,iBAAiB,CAAC;MAAA,EAAC;MAClCD,gCAAgB;MAAAA,iBAAI;MAChDA,iCAAsB;MAAAA,yBAAQ;MAAAA,iBAAQ;MACtCA,4BAKa;MAGbA,6BAAM;MACFA,gCAAc;MAAAA,6BAAqD;MAAlDA;QAAA,OAASC,kCAA8B,QAAQ,CAAC;MAAA,EAAC;MAACD,0CAAyB;MAAAA,iBAAI;;;MAvBpGA,eAAuB;MAAvBA,yCAAuB","names":["EventEmitter","FormGroup","FormControl","SigninComponent","constructor","switchModalService","httpService","formGroup","email","password","ngOnInit","setInterval","console","log","label","submit","invalid","params","identifier","value","post","subscribe","response","success","alert","SigninSuccess","emit","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/profile/components/signin/signin.component.ts","/var/projects/gtender/client2/src/modules/profile/components/signin/signin.component.html"],"sourcesContent":["import { \n    Component, \n    Input, \n    Output, \n    EventEmitter,\n    Inject,\n} from '@angular/core';\nimport { SwitchModalService } from 'src/modules/modal/services/switch-modal.service';\nimport { HttpService } from 'src/modules/tools/services/http.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent {\n  /**\n   * @description:\n   */\n  @Output()\n  public SigninSuccess: EventEmitter<any> = new EventEmitter<any>(); \n\n  /**\n   * @description: \n   */\n  @Input()\n  public label: string = '';\n\n  /**\n   * @description: \n   */\n  public formGroup: FormGroup;\n\n  constructor(\n    public switchModalService: SwitchModalService,\n    public httpService: HttpService,\n  ) {\n    this.formGroup = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl(''),\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public ngOnInit() {\n    setInterval(() => {\n      console.log(this.label);\n    }, 100)    \n  }\n\n  /**\n   * @description:\n   */\n  public submit(): void {\n    if (this.formGroup.invalid) { return; }\n    \n    // -> [API] - Signin\n    const params = {\n      identifier: this.formGroup.value.email,\n      password: this.formGroup.value.password,\n    };\n    this.httpService.post('auth/signin', params).subscribe((response: any) => {\n      if (!response.success) {\n        return;\n      }\n    \n      alert ('send success');\n      this.SigninSuccess.emit(response);\n    });\n  }\n}\n","\n<!-- https://tailwindui.com/components/application-ui/forms/sign-in-forms -->\n<div class=\"signin_container auth_container\">\n    <img src=\"/assets/img/logo.svg\" alt=\"\">\n    <h1>Sign in to your account</h1>\n    <form \n        [formGroup]=\"formGroup\" \n        (ngSubmit)=\"submit()\">\n        <label for=\"email\">Email address</label>\n        <input \n            type=\"email\" \n            id=\"email\" \n            formControlName=\"email\" \n            placeholder=\"Email address\" \n            required>\n\n        <a \n            (click)=\"switchModalService.open_modal('forget_password')\"\n            class=\"forget_password\">Forgot password?</a>\n        <label for=\"password\">Password</label>\n        <input \n            type=\"password\" \n            id=\"password\" \n            formControlName=\"password\" \n            placeholder=\"Password\" \n            required>\n        <input type=\"submit\" value=\"Sign in\" class=\"bg_central_button_gradient\">\n        \n        <span>\n            Not a member? <a (click)=\"switchModalService.open_modal('signup')\">Start a 14 day free trial</a>\n        </span>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}