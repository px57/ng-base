{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/modules/modal/services/switch-modal.service\";\nimport * as i2 from \"src/modules/tools/services/http.service\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../form/components/form-error/form-error.component\";\nexport class SigninComponent {\n  constructor(switchModalService, httpService, authService) {\n    this.switchModalService = switchModalService;\n    this.httpService = httpService;\n    this.authService = authService;\n    /**\n     * @description:\n     */\n    this.httpResponse = {};\n    this.config = this.authService.config__signin;\n    this.formGroup = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n  /**\n   * @description:\n   */\n  ngOnInit() {}\n  /**\n   * @description:\n   */\n  submit() {\n    if (this.formGroup.invalid) {\n      return;\n    }\n    // -> [API] - Signin\n    const params = {\n      identifier: this.formGroup.value.email,\n      password: this.formGroup.value.password\n    };\n    this.httpService.post('auth/signin', params).subscribe(response => {\n      this.httpResponse = response;\n      if (!response.success) {\n        return;\n      }\n      this.config.eventAfterSignin();\n    });\n  }\n}\n_class = SigninComponent;\n_class.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.SwitchModalService), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signin\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"signin_container\", \"auth_container\"], [\"src\", \"/assets/img/logo.svg\", \"alt\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email address\", \"required\", \"\"], [1, \"forget_password\", 3, \"click\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\"], [\"inputName\", \"__signin__\", 3, \"httpResponse\"], [\"type\", \"submit\", \"value\", \"Sign in\", 1, \"bg_central_button_gradient\"], [3, \"click\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3, \"Sign in to your account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(5, \"label\", 3);\n      i0.ɵɵtext(6, \" Email address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementStart(8, \"a\", 5);\n      i0.ɵɵlistener(\"click\", function SigninComponent_Template_a_click_8_listener() {\n        return ctx.switchModalService.open_modal(\"forget_password\");\n      });\n      i0.ɵɵtext(9, \" Forgot password? \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7)(13, \"app-form-error\", 8)(14, \"input\", 9);\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \" Not a member? \");\n      i0.ɵɵelementStart(17, \"a\", 10);\n      i0.ɵɵlistener(\"click\", function SigninComponent_Template_a_click_17_listener() {\n        return ctx.switchModalService.open_modal(\"signup\");\n      });\n      i0.ɵɵtext(18, \"Start a 14 day free trial\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"httpResponse\", ctx.httpResponse);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.FormErrorComponent],\n  styles: [\".forget_password[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL3Byb2ZpbGUvY29tcG9uZW50cy9zaWduaW4vc2lnbmluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcmdldF9wYXNzd29yZCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";AASA,SAASA,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;;;;;;;AASvD,OAAM,MAAOC,eAAe;EAgB1BC,YACSC,kBAAsC,EACtCC,WAAwB,EACxBC,WAAwB;IAFxB,uBAAkB,GAAlBF,kBAAkB;IAClB,gBAAW,GAAXC,WAAW;IACX,gBAAW,GAAXC,WAAW;IARpB;;;IAGO,iBAAY,GAAQ,EAAE;IAO3B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,WAAW,CAACE,cAAc;IAC7C,IAAI,CAACC,SAAS,GAAG,IAAIT,SAAS,CAAC;MAC7BU,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC1BU,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE;KAC7B,CAAC;EACJ;EAEA;;;EAGOW,QAAQ,IAAM;EAErB;;;EAGOC,MAAM;IACX,IAAI,IAAI,CAACJ,SAAS,CAACK,OAAO,EAAE;MAAE;;IAE9B;IACA,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAE,IAAI,CAACP,SAAS,CAACQ,KAAK,CAACP,KAAK;MACtCC,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACQ,KAAK,CAACN;KAChC;IACD,IAAI,CAACN,WAAW,CAACa,IAAI,CAAC,aAAa,EAAEH,MAAM,CAAC,CAACI,SAAS,CAAEC,QAAa,IAAI;MACvE,IAAI,CAACC,YAAY,GAAGD,QAAQ;MAC5B,IAAI,CAACA,QAAQ,CAACE,OAAO,EAAE;QACrB;;MAGF,IAAI,CAACf,MAAM,CAACgB,gBAAgB,EAAE;IAChC,CAAC,CAAC;EACJ;;SApDWrB,eAAe;;mBAAfA,MAAe;AAAA;;QAAfA,MAAe;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB5BC,8BAA6C;MACzCA,yBAAuC;MACvCA,0BAAI;MAAAA,uCAAuB;MAAAA,iBAAK;MAChCA,+BAE0B;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MAErBD,gCAAmB;MACfA,+BACJ;MAAAA,iBAAQ;MAERA,2BAKa;MAEbA,4BAE4B;MADxBA;QAAA,OAASC,kCAA8B,iBAAiB,CAAC;MAAA,EAAC;MAE1DD,kCACJ;MAAAA,iBAAI;MAEJA,iCAAsB;MAAAA,yBAAQ;MAAAA,iBAAQ;MAEtCA,4BAKa;MASbA,6BAAM;MACFA,gCAAc;MAAAA,8BAAqD;MAAlDA;QAAA,OAASC,kCAA8B,QAAQ,CAAC;MAAA,EAAC;MAACD,0CAAyB;MAAAA,iBAAI;;;MArCpGA,eAAuB;MAAvBA,yCAAuB;MA8BnBA,eAA6B;MAA7BA,+CAA6B","names":["FormGroup","FormControl","SigninComponent","constructor","switchModalService","httpService","authService","config","config__signin","formGroup","email","password","ngOnInit","submit","invalid","params","identifier","value","post","subscribe","response","httpResponse","success","eventAfterSignin","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/var/projects/gtender/client2/src/modules/profile/components/signin/signin.component.ts","/var/projects/gtender/client2/src/modules/profile/components/signin/signin.component.html"],"sourcesContent":["import { \n    Component, \n    Input, \n    Output, \n    EventEmitter,\n    Inject,\n} from '@angular/core';\nimport { SwitchModalService } from 'src/modules/modal/services/switch-modal.service';\nimport { HttpService } from 'src/modules/tools/services/http.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { ConfigSignin } from '../../types';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent {\n  /**\n   * @description: \n   */\n  public formGroup: FormGroup;\n\n  /**\n   * @description:\n   */\n  public config: ConfigSignin;\n\n  /**\n   * @description:\n   */\n  public httpResponse: any = {};\n\n  constructor(\n    public switchModalService: SwitchModalService,\n    public httpService: HttpService,\n    public authService: AuthService,\n  ) {\n    this.config = this.authService.config__signin;\n    this.formGroup = new FormGroup({\n      email: new FormControl(''),\n      password: new FormControl(''),\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public ngOnInit() {  }\n\n  /**\n   * @description:\n   */\n  public submit(): void {\n    if (this.formGroup.invalid) { return; }\n    \n    // -> [API] - Signin\n    const params = {\n      identifier: this.formGroup.value.email,\n      password: this.formGroup.value.password,\n    };\n    this.httpService.post('auth/signin', params).subscribe((response: any) => {\n      this.httpResponse = response;\n      if (!response.success) {\n        return;\n      }\n\n      this.config.eventAfterSignin();\n    });\n  }\n}\n","\n<!-- https://tailwindui.com/components/application-ui/forms/sign-in-forms -->\n<div class=\"signin_container auth_container\">\n    <img src=\"/assets/img/logo.svg\" alt=\"\">\n    <h1>Sign in to your account</h1>\n    <form \n        [formGroup]=\"formGroup\" \n        (ngSubmit)=\"submit()\">\n\n        <label for=\"email\">\n            Email address\n        </label>\n\n        <input \n            type=\"email\" \n            id=\"email\" \n            formControlName=\"email\" \n            placeholder=\"Email address\" \n            required>\n\n        <a \n            (click)=\"switchModalService.open_modal('forget_password')\"\n            class=\"forget_password\">\n            Forgot password?\n        </a>\n\n        <label for=\"password\">Password</label>\n\n        <input \n            type=\"password\" \n            id=\"password\" \n            formControlName=\"password\" \n            placeholder=\"Password\" \n            required>\n        \n            <app-form-error\n            [httpResponse]=\"httpResponse\"\n            inputName=\"__signin__\"\n          ></app-form-error>\n\n        <input type=\"submit\" value=\"Sign in\" class=\"bg_central_button_gradient\">\n        \n        <span>\n            Not a member? <a (click)=\"switchModalService.open_modal('signup')\">Start a 14 day free trial</a>\n        </span>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}