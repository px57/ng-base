{"ast":null,"code":"var _class;\nimport { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/modules/tools/services/http.service\";\nimport * as i3 from \"src/modules/tools/services/libs.service\";\nimport * as i4 from \"src/modules/modal/services/switch-modal.service\";\n;\n;\nexport class UserService {\n  /*\n   * @description:\n   */\n  constructor(router, _h, l, switchModalService) {\n    this.router = router;\n    this._h = _h;\n    this.l = l;\n    this.switchModalService = switchModalService;\n    /**\n     * @description:\n     */\n    this.stream = new Subject();\n    this.REDIRECT_ONBOARDING = true;\n    /*\n     * @description:\n     */\n    this.registrationForm = {\n      first: FormGroup,\n      second: FormGroup\n    };\n    //############################ [GLOBAL-DATA-BEGIN]\n    /*\n     * @description:\n     */\n    this.data = {\n      success: false\n    };\n    /**\n     * @description:\n     */\n    this.change_settings_data = new Subject();\n    /**\n     * @description:\n     */\n    this.change_data = new Subject();\n    /**\n     * @description:\n     */\n    this.list_component_update_data = [];\n    /*\n     * @description:\n     */\n    this.openEmailValidator = false;\n    window.userService = this;\n    this._h.userService = this;\n  }\n  /*\n   * @description:\n   */\n  logout() {\n    this._h.get('v1/auth/logout/').subscribe(res => {\n      window.location.reload();\n    });\n  }\n  /*\n   * @description:\n   */\n  not_is_authenticated() {\n    return !this.is_authenticated();\n  }\n  /*\n   * @description:\n   */\n  is_authenticated() {\n    return this.data.is_authenticated;\n  }\n  /**\n   * @description:\n   */\n  data_is_loaded() {\n    return this.data.is_authenticated !== undefined;\n  }\n  /*\n   * @description:\n   */\n  belongToGroup(group) {\n    if (!this.is_authenticated()) {\n      return false;\n    }\n    return this.data.user.group === group;\n  }\n  /**\n   * @description:\n   */\n  is_me(compareWith, value) {\n    if (!this.is_authenticated()) {\n      return false;\n    }\n    if (compareWith === 'id' && ['string', 'number'].indexOf(typeof value) !== -1 && this.data.user.id === parseInt(value, 0)) {\n      return true;\n    }\n    return false;\n  }\n  /*\n   * @description:\n   */\n  is_professional(profile = null) {\n    const group = this.get_my_group(profile);\n    return group === 'pro';\n  }\n  /*\n   * @description:\n   */\n  is_creator(profile = null) {\n    const group = this.get_my_group(profile);\n    return group === 'creator';\n  }\n  /*\n   * @description:\n   */\n  is_customer(profile = null) {\n    const group = this.get_my_group(profile);\n    return group !== null && group === 'customer';\n  }\n  /*\n   * @description:\n   */\n  is_staff(profile = null) {\n    const group = this.get_my_group(profile);\n    return group !== null && group === 'staff';\n  }\n  /*\n   * @description:\n   */\n  is_pro_or_creator(profile = null) {\n    const group = this.get_my_group(profile);\n    return group !== null && this.is_creator(profile) || this.is_professional(profile);\n  }\n  /*\n   * @description:\n   */\n  reset_data() {} // Remettre l'element à null\n  /*\n   * @description:\n   */\n  data_loaded() {\n    return this.data.success;\n  }\n  /*\n   * @description:\n   */\n  set_data(data) {\n    this.data = data;\n    if (data.data === null) {\n      return;\n    }\n    this.stream.next(data.user);\n  }\n  /*\n   * @description:\n   */\n  get_id() {\n    let data = this.get_data();\n    if (!data.hasOwnProperty('user') || !data.user.hasOwnProperty('id')) {\n      return 0;\n    }\n    return data.user.id;\n  }\n  /*\n   * @description: Il s'agit ici de récupérer la video de ce profile\n   */\n  get_my_profile_video(profile = null) {\n    if (profile === null) {\n      profile = this.data.profile;\n    }\n    const defaultVideoUrl = '';\n    if (profile.profile_video !== undefined) {\n      return profile.profile_video.video;\n    }\n    return defaultVideoUrl;\n  }\n  /**\n   * @description:\n   */\n  get_my_group(profile = null) {\n    if (profile !== null) {\n      return profile.group;\n    }\n    if (!this.is_authenticated()) {\n      return undefined;\n    }\n    return this.data.profile.group;\n  }\n  /**\n   * @description:\n   */\n  get_in_user(key) {\n    const user = this.data.user;\n    if (user === undefined) {\n      return undefined;\n    }\n    if (!user.hasOwnProperty(key)) {\n      return undefined;\n    }\n    return user[key];\n  }\n  /**\n   * @description:\n   */\n  drop_in_user(key) {\n    if (this.data.user === undefined) {\n      return false;\n    }\n    if (this.data.user[key] === undefined) {\n      return false;\n    }\n    this.data.user[key] = undefined;\n    return true;\n  }\n  /**\n   * @description:\n   */\n  bind_change_data(componentOrService) {\n    this.list_component_update_data.push(componentOrService);\n  }\n  /*\n   * @description:\n   */\n  send_event_change_data() {\n    for (let componentOrService of this.list_component_update_data) {\n      if (!componentOrService.hasOwnProperty('bindChangeGlobalData')) {\n        continue;\n      }\n      componentOrService.bindChangeGlobalData();\n    }\n  }\n  /*\n   * @description:\n   */\n  update_data() {\n    return this._h.get('v1/auth/me/').pipe(map(response => {\n      this.send_event_change_data();\n      this.set_data(response);\n      return response;\n    }));\n  }\n  /*\n   * @description:\n   */\n  get_data() {\n    const invitation = this.get_in_user('invitation');\n    if (invitation) {\n      this.drop_in_user('invitation');\n      // this.invitation.get_data(invitation, this.get_my_group());\n    }\n\n    return this.data;\n  }\n  /*\n   * @description:\n   */\n  getSettings() {\n    return this.data.profile.settings;\n    // return {\n    //   'notification': {\n    //     'before_your_video_call': true,\n    //     'wishlist_activity': true,\n    //     'talkto_promotionnal_offer': true,\n    //   }\n    // };\n  }\n  /*\n   * @description: Récupérer le profile de cette personnes.\n   */\n  getProfile(profile = null) {\n    if (profile !== null) {\n      return profile;\n    }\n    return this.data.profile;\n  }\n  /*\n   * @description:\n   */\n  get_profile_url(profile) {\n    return `/profile/${profile.username}`;\n  }\n  /*\n   * @description: Si l'utilisateurs n'est pas connecter alors ont le redirige vers la pages de logins.\n   */\n  redirectToLogin__IfLogout() {\n    if (this.is_authenticated()) {\n      return false;\n    }\n    this.open_login_modal();\n    return true;\n  }\n  /**\n   * @description:\n   */\n  redirectToSignup__IfLogout() {\n    if (this.is_authenticated()) {\n      return false;\n    }\n    this.open_signup_modal();\n    return true;\n  }\n  /*\n   * @description: Permet de savoir si l'images est part défaut\n   */\n  hasProfilePicture(profile = null) {\n    profile = this.getProfile(profile);\n    const images = this.data.profile.profile_picture;\n    const defaultPicture = `assets/assets/img/user1.jpg`;\n    try {\n      return images.split('/').splice(-4).join('/') !== defaultPicture;\n    } catch {\n      return true;\n    }\n    return true;\n  }\n  /*\n   * @description: Regarde s'il y a une video de presentations.\n   */\n  hasVideoProfile(profile = null) {\n    profile = this.getProfile(profile);\n    if (profile.profile_video === undefined) {\n      return false;\n    }\n    if (profile.profile_video.hasOwnProperty('type') && profile.profile_video.type === 'default') {\n      return false;\n    }\n    // if (!profile.profile_video.cropped) {\n    //   return false;\n    // }\n    return true;\n  }\n  /*\n   * @description:\n   */\n  hasVideoPriceConfigured(profile = null) {\n    profile = this.getProfile(profile);\n    const price = profile.price;\n    return price.price.length !== 0;\n  }\n  /*\n   * @description:\n   */\n  updateVideo(video) {\n    this.data.profile.profile_video = video;\n  }\n  /*\n   * @description:\n   */\n  getSocialNetWorkIco() {}\n  /*\n   * @description: Récupérer le bon réseaux social.\n   */\n  getSocialNetWorkUrl(profile, key = `instagram`) {\n    const social_network_list = profile.social_network_list;\n    const index = social_network_list.findIndex(x => x.key === key);\n    if (index === -1) {\n      return ``;\n    }\n    return social_network_list[index].url;\n  }\n  /*\n   * @description:\n   */\n  clickSocialNetWork(socialNetwork) {\n    let url = socialNetwork.url;\n    if (url.substring(0, 4) !== 'http') {\n      url = `http://${url}`;\n    }\n    window.open(url, `_blank`, ``);\n  }\n  /*\n   * @description:\n   */\n  // public openEmailValidatorPage(): void {\n  //   if (this.openEmailValidator) {\n  //     return;\n  //   }\n  //   const profile = this.getProfile();\n  //   if (!profile.email_validate) {\n  //     this.openEmailValidator = true;\n  //     this.openCloseElementService.openEmailValidator();\n  //   }\n  // }\n  /*\n   * @description: Rediriger l'utilisateurs vers le profile qui lui est lier.\n   */\n  redirectToProfile(profile) {\n    if (!this.is_pro_or_creator(profile)) {\n      return;\n    }\n    this.l.navigateByUrl(profile.username);\n  }\n  /*\n   * @description:\n   */\n  getApiKey(keyName) {\n    if (this.data.API.hasOwnProperty(keyName)) {\n      return this.data.API[keyName];\n    }\n    return undefined;\n  }\n  /*\n   * @description:\n   */\n  phoneNumberIsEmpty() {\n    const profile = this.getProfile();\n    return profile.phone_number.country_code === null || profile.phone_number.number === null;\n  }\n  /*\n   * @description:\n   */\n  isAnonymousProfile() {\n    const profile = this.getProfile();\n    return profile.anonymous;\n  }\n  /*\n   * @description:\n   */\n  notAccessForAnonymousProfile() {\n    if (this.isAnonymousProfile()) {\n      this.router.navigateByUrl(`/`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @description:\n   */\n  strapiSendForgetPaswordEmail(email) {\n    return this._h.post(`${this.getApiKey('strapi')}/auth/forgot-password`, {\n      email\n    });\n  }\n  /**\n   * @description:\n   */\n  setJwtToken(token) {\n    localStorage.setItem('jwt', token);\n  }\n  /**\n   * @description:\n   */\n  getJwtToken() {\n    return localStorage.getItem('jwt');\n  }\n  /**\n   * @description:\n   */\n  dropJwtToken() {\n    localStorage.removeItem('jwt');\n  }\n  /**\n   * @description:\n   */\n  hasJwtToken() {\n    return this.getJwtToken() !== null;\n  }\n  /**\n   * @description:\n   */\n  getLanguage() {\n    if (this.data === undefined) {\n      return 'en';\n    }\n    if (this.data.data === undefined) {\n      return 'en';\n    }\n    if (this.data.data.user === undefined) {\n      return 'en';\n    }\n    return this.data.data.user.language;\n  }\n  /**\n   * @description:\n   */\n  langIsFr() {\n    return this.getLanguage() === 'fr';\n  }\n  /**\n   * @description:\n   */\n  langIsEn() {\n    return this.getLanguage() === 'en';\n  }\n  /**\n   * @description:\n   */\n  setLanguage(language) {\n    const params = {\n      language\n    };\n    this._h.post(`profiles/change_language/`, params).subscribe(res => {\n      window.location.reload();\n    });\n  }\n  /**\n   * @description:\n   */\n  get_first_name() {\n    return this.data.data.user.user.first_name;\n  }\n  /**\n   * @description:\n   */\n  get_last_name() {\n    return this.data.data.user.user.last_name;\n  }\n  /**\n   * @description:\n   */\n  get_email() {\n    return this.data.data.user.user.email;\n  }\n  /**\n   * @description:\n   */\n  profileHasOnboarded() {\n    if (this.data.data === undefined) {\n      return false;\n    }\n    return this.data.data.onboarding;\n  }\n  /**\n   * @description:\n   */\n  open_login_modal() {\n    this.switchModalService.open_modal('login');\n  }\n  /**\n   * @description:\n   */\n  open_signup_modal() {\n    this.switchModalService.open_modal('signup');\n  }\n  /**\n   * @description:\n   */\n  open_forget_password_modal() {\n    this.switchModalService.open_modal('forget_password');\n  }\n  /**\n   * @description:\n   * @param.profile\n   */\n  get_avatar(profile = undefined) {\n    const default_avatar = {\n      src: 'assets/assets/img/user1.jpg'\n    };\n    if (profile === undefined) {\n      profile = this.data.profile;\n    }\n    if (profile === undefined) {\n      return;\n    }\n    if (profile.avatar === undefined || profile.avatar === null) {\n      return default_avatar;\n    }\n    return profile.avatar;\n  }\n  /**\n   * @description:\n   */\n  update_avatar(avatar) {\n    this.data.profile.avatar = avatar;\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpService), i0.ɵɵinject(i3.LibsService), i0.ɵɵinject(i4.SwitchModalService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAQ,gBAAgB;AAE1C,SAASC,OAAO,QAAQ,MAAM;AAE9B,SAASC,GAAG,QAAQ,gBAAgB;;;;;;AAOnC;AAUA;AAOD,OAAM,MAAOC,WAAW;EAStB;;;EAGAC,YACUC,MAAc,EACfC,EAAe,EACfC,CAAc,EACdC,kBAAsC;IAHrC,WAAM,GAANH,MAAM;IACP,OAAE,GAAFC,EAAE;IACF,MAAC,GAADC,CAAC;IACD,uBAAkB,GAAlBC,kBAAkB;IAf3B;;;IAGO,WAAM,GAAiB,IAAIP,OAAO,EAAE;IAEpC,wBAAmB,GAAG,IAAI;IAiBjC;;;IAGO,qBAAgB,GAAQ;MAC7BQ,KAAK,EAAET,SAAS;MAChBU,MAAM,EAAEV;KACT;IAwGD;IAEA;;;IAGO,SAAI,GAAQ;MACjBW,OAAO,EAAE;KACV;IA+FD;;;IAGO,yBAAoB,GAAiB,IAAIV,OAAO,EAAE;IAEzD;;;IAGO,gBAAW,GAAiB,IAAIA,OAAO,EAAE;IAEhD;;;IAGO,+BAA0B,GAAU,EAAE;IAwL7C;;;IAGQ,uBAAkB,GAAG,KAAK;IAha/BW,MAAc,CAACC,WAAW,GAAG,IAAI;IAClC,IAAI,CAACP,EAAE,CAACO,WAAW,GAAG,IAAI;EAC5B;EAUA;;;EAGOC,MAAM;IACX,IAAI,CAACR,EAAE,CAACS,GAAG,CAAC,iBAAiB,CAAC,CAACC,SAAS,CAAEC,GAAQ,IAAI;MACpDL,MAAM,CAACM,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEA;;;EAGOC,oBAAoB;IACzB,OAAO,CAAC,IAAI,CAACC,gBAAgB,EAAE;EACjC;EAEA;;;EAGOA,gBAAgB;IACrB,OAAO,IAAI,CAACC,IAAI,CAACD,gBAAgB;EACnC;EAEA;;;EAGOE,cAAc;IACnB,OAAO,IAAI,CAACD,IAAI,CAACD,gBAAgB,KAAKG,SAAS;EACjD;EAEA;;;EAGOC,aAAa,CAACC,KAAU;IAC7B,IAAI,CAAC,IAAI,CAACL,gBAAgB,EAAE,EAAE;MAC5B,OAAO,KAAK;;IAGd,OAAO,IAAI,CAACC,IAAI,CAACK,IAAI,CAACD,KAAK,KAAKA,KAAK;EACvC;EAEA;;;EAGOE,KAAK,CAACC,WAAmB,EAAEC,KAAU;IAC1C,IAAI,CAAC,IAAI,CAACT,gBAAgB,EAAE,EAAE;MAC5B,OAAO,KAAK;;IAGd,IACEQ,WAAW,KAAK,IAAI,IACpB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACE,OAAO,CAAC,OAAOD,KAAK,CAAC,KAAK,CAAC,CAAC,IACjD,IAAI,CAACR,IAAI,CAACK,IAAI,CAACK,EAAE,KAAKC,QAAQ,CAACH,KAAK,EAAE,CAAC,CAAC,EACxC;MACA,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEA;;;EAGOI,eAAe,CAACC,UAAe,IAAI;IACxC,MAAMT,KAAK,GAAQ,IAAI,CAACU,YAAY,CAACD,OAAO,CAAC;IAC7C,OAAOT,KAAK,KAAK,KAAK;EACxB;EAEA;;;EAGOW,UAAU,CAACF,UAAe,IAAI;IACnC,MAAMT,KAAK,GAAQ,IAAI,CAACU,YAAY,CAACD,OAAO,CAAC;IAC7C,OAAOT,KAAK,KAAK,SAAS;EAC5B;EAEA;;;EAGOY,WAAW,CAACH,UAAe,IAAI;IACpC,MAAMT,KAAK,GAAQ,IAAI,CAACU,YAAY,CAACD,OAAO,CAAC;IAC7C,OAAOT,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,UAAU;EAC/C;EAEA;;;EAGOa,QAAQ,CAACJ,UAAe,IAAI;IACjC,MAAMT,KAAK,GAAQ,IAAI,CAACU,YAAY,CAACD,OAAO,CAAC;IAC7C,OAAOT,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,OAAO;EAC5C;EAEA;;;EAGOc,iBAAiB,CAACL,UAAe,IAAI;IAC1C,MAAMT,KAAK,GAAQ,IAAI,CAACU,YAAY,CAACD,OAAO,CAAC;IAC7C,OACGT,KAAK,KAAK,IAAI,IAAI,IAAI,CAACW,UAAU,CAACF,OAAO,CAAC,IAC3C,IAAI,CAACD,eAAe,CAACC,OAAO,CAAC;EAEjC;EAWA;;;EAGOM,UAAU,IAEjB,CAAC,CAAC;EAEF;;;EAGOC,WAAW;IAChB,OAAO,IAAI,CAACpB,IAAI,CAACX,OAAO;EAC1B;EAEA;;;EAGOgC,QAAQ,CAACrB,IAAS;IACvB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAIA,IAAI,CAACA,IAAI,KAAK,IAAI,EAAE;MACtB;;IAGF,IAAI,CAACsB,MAAM,CAACC,IAAI,CAACvB,IAAI,CAACK,IAAI,CAAC;EAC7B;EAEA;;;EAGOmB,MAAM;IACX,IAAIxB,IAAI,GAAG,IAAI,CAACyB,QAAQ,EAAE;IAE1B,IAAI,CAACzB,IAAI,CAAC0B,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC1B,IAAI,CAACK,IAAI,CAACqB,cAAc,CAAC,IAAI,CAAC,EAAE;MACnE,OAAO,CAAC;;IAEV,OAAO1B,IAAI,CAACK,IAAI,CAACK,EAAE;EACrB;EAEA;;;EAGOiB,oBAAoB,CAACd,UAAe,IAAI;IAC7C,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpBA,OAAO,GAAG,IAAI,CAACb,IAAI,CAACa,OAAO;;IAE7B,MAAMe,eAAe,GAAG,EAAE;IAC1B,IAAIf,OAAO,CAACgB,aAAa,KAAK3B,SAAS,EAAE;MACvC,OAAOW,OAAO,CAACgB,aAAa,CAACC,KAAK;;IAEpC,OAAOF,eAAe;EACxB;EAEA;;;EAGOd,YAAY,CAACD,UAAe,IAAI;IACrC,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpB,OAAOA,OAAO,CAACT,KAAK;;IAEtB,IAAI,CAAC,IAAI,CAACL,gBAAgB,EAAE,EAAE;MAC5B,OAAOG,SAAS;;IAElB,OAAO,IAAI,CAACF,IAAI,CAACa,OAAO,CAACT,KAAK;EAChC;EAEA;;;EAGO2B,WAAW,CAACC,GAAQ;IACzB,MAAM3B,IAAI,GAAG,IAAI,CAACL,IAAI,CAACK,IAAI;IAC3B,IAAIA,IAAI,KAAKH,SAAS,EAAE;MACtB,OAAOA,SAAS;;IAElB,IAAI,CAACG,IAAI,CAACqB,cAAc,CAACM,GAAG,CAAC,EAAE;MAC7B,OAAO9B,SAAS;;IAElB,OAAOG,IAAI,CAAC2B,GAAG,CAAC;EAClB;EAEA;;;EAGOC,YAAY,CAACD,GAAQ;IAC1B,IAAI,IAAI,CAAChC,IAAI,CAACK,IAAI,KAAKH,SAAS,EAAE;MAChC,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACF,IAAI,CAACK,IAAI,CAAC2B,GAAG,CAAC,KAAK9B,SAAS,EAAE;MACrC,OAAO,KAAK;;IAEd,IAAI,CAACF,IAAI,CAACK,IAAI,CAAC2B,GAAG,CAAC,GAAG9B,SAAS;IAC/B,OAAO,IAAI;EACb;EAiBA;;;EAGOgC,gBAAgB,CAACC,kBAAuB;IAC7C,IAAI,CAACC,0BAA0B,CAACC,IAAI,CAACF,kBAAkB,CAAC;EAC1D;EAEA;;;EAGOG,sBAAsB;IAC3B,KAAK,IAAIH,kBAAkB,IAAI,IAAI,CAACC,0BAA0B,EAAE;MAC9D,IAAI,CAACD,kBAAkB,CAACT,cAAc,CAAC,sBAAsB,CAAC,EAAE;QAC9D;;MAEFS,kBAAkB,CAACI,oBAAoB,EAAE;;EAE7C;EAEA;;;EAGOC,WAAW;IAChB,OAAO,IAAI,CAACxD,EAAE,CAACS,GAAG,CAAC,aAAa,CAAC,CAACgD,IAAI,CACpC7D,GAAG,CAAE8D,QAAQ,IAAI;MACf,IAAI,CAACJ,sBAAsB,EAAE;MAC7B,IAAI,CAACjB,QAAQ,CAACqB,QAAQ,CAAC;MACvB,OAAOA,QAAQ;IACjB,CAAC,CAAC,CACH;EACH;EAEA;;;EAGOjB,QAAQ;IACb,MAAMkB,UAAU,GAAG,IAAI,CAACZ,WAAW,CAAC,YAAY,CAAC;IACjD,IAAIY,UAAU,EAAE;MACd,IAAI,CAACV,YAAY,CAAC,YAAY,CAAC;MAC/B;;;IAGF,OAAO,IAAI,CAACjC,IAAI;EAClB;EAEA;;;EAGO4C,WAAW;IAChB,OAAO,IAAI,CAAC5C,IAAI,CAACa,OAAO,CAACgC,QAAQ;IACjC;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEA;;;EAGOC,UAAU,CAACjC,OAAO,GAAG,IAAI;IAC9B,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpB,OAAOA,OAAO;;IAEhB,OAAO,IAAI,CAACb,IAAI,CAACa,OAAO;EAC1B;EAEA;;;EAGOkC,eAAe,CAAClC,OAAY;IACjC,OAAO,YAAYA,OAAO,CAACmC,QAAQ,EAAE;EACvC;EAEA;;;EAGOC,yBAAyB;IAC9B,IAAI,IAAI,CAAClD,gBAAgB,EAAE,EAAE;MAC3B,OAAO,KAAK;;IAGd,IAAI,CAACmD,gBAAgB,EAAE;IACvB,OAAO,IAAI;EACb;EAEA;;;EAGOC,0BAA0B;IAC/B,IAAI,IAAI,CAACpD,gBAAgB,EAAE,EAAE;MAC3B,OAAO,KAAK;;IAEd,IAAI,CAACqD,iBAAiB,EAAE;IACxB,OAAO,IAAI;EACb;EAEA;;;EAGOC,iBAAiB,CAACxC,OAAO,GAAG,IAAI;IACrCA,OAAO,GAAG,IAAI,CAACiC,UAAU,CAACjC,OAAO,CAAC;IAClC,MAAMyC,MAAM,GAAW,IAAI,CAACtD,IAAI,CAACa,OAAO,CAAC0C,eAAe;IACxD,MAAMC,cAAc,GAAW,6BAA6B;IAE5D,IAAI;MACF,OAAOF,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,KAAKH,cAAc;KACjE,CAAC,MAAM;MACN,OAAO,IAAI;;IAEb,OAAO,IAAI;EACb;EAEA;;;EAGOI,eAAe,CAAC/C,UAAe,IAAI;IACxCA,OAAO,GAAG,IAAI,CAACiC,UAAU,CAACjC,OAAO,CAAC;IAElC,IAAIA,OAAO,CAACgB,aAAa,KAAK3B,SAAS,EAAE;MACvC,OAAO,KAAK;;IAGd,IACEW,OAAO,CAACgB,aAAa,CAACH,cAAc,CAAC,MAAM,CAAC,IAC5Cb,OAAO,CAACgB,aAAa,CAACgC,IAAI,KAAK,SAAS,EACxC;MACA,OAAO,KAAK;;IAGd;IACA;IACA;IACA,OAAO,IAAI;EACb;EAEA;;;EAGOC,uBAAuB,CAACjD,UAAe,IAAI;IAChDA,OAAO,GAAG,IAAI,CAACiC,UAAU,CAACjC,OAAO,CAAC;IAClC,MAAMkD,KAAK,GAAGlD,OAAO,CAACkD,KAAK;IAC3B,OAAOA,KAAK,CAACA,KAAK,CAACC,MAAM,KAAK,CAAC;EACjC;EAEA;;;EAGOC,WAAW,CAACnC,KAAU;IAC3B,IAAI,CAAC9B,IAAI,CAACa,OAAO,CAACgB,aAAa,GAAGC,KAAK;EACzC;EAEA;;;EAGOoC,mBAAmB,IAAU;EAEpC;;;EAGOC,mBAAmB,CAACtD,OAAY,EAAEmB,GAAG,GAAG,WAAW;IACxD,MAAMoC,mBAAmB,GAAGvD,OAAO,CAACuD,mBAAmB;IACvD,MAAMC,KAAK,GAAGD,mBAAmB,CAACE,SAAS,CAAEC,CAAM,IAAKA,CAAC,CAACvC,GAAG,KAAKA,GAAG,CAAC;IACtE,IAAIqC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,OAAO,EAAE;;IAEX,OAAOD,mBAAmB,CAACC,KAAK,CAAC,CAACG,GAAG;EACvC;EAEA;;;EAGOC,kBAAkB,CAACC,aAAkB;IAC1C,IAAIF,GAAG,GAAGE,aAAa,CAACF,GAAG;IAC3B,IAAIA,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE;MAClCH,GAAG,GAAG,UAAUA,GAAG,EAAE;;IAEvBlF,MAAM,CAACsF,IAAI,CAACJ,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC;EAChC;EAOA;;;EAGA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EAGOK,iBAAiB,CAAChE,OAAY;IACnC,IAAI,CAAC,IAAI,CAACK,iBAAiB,CAACL,OAAO,CAAC,EAAE;MACpC;;IAEF,IAAI,CAAC5B,CAAC,CAAC6F,aAAa,CAACjE,OAAO,CAACmC,QAAQ,CAAC;EACxC;EAEA;;;EAGO+B,SAAS,CAACC,OAAe;IAC9B,IAAI,IAAI,CAAChF,IAAI,CAACiF,GAAG,CAACvD,cAAc,CAACsD,OAAO,CAAC,EAAE;MACzC,OAAO,IAAI,CAAChF,IAAI,CAACiF,GAAG,CAACD,OAAO,CAAC;;IAE/B,OAAO9E,SAAS;EAClB;EAEA;;;EAGOgF,kBAAkB;IACvB,MAAMrE,OAAO,GAAG,IAAI,CAACiC,UAAU,EAAE;IACjC,OACEjC,OAAO,CAACsE,YAAY,CAACC,YAAY,KAAK,IAAI,IAC1CvE,OAAO,CAACsE,YAAY,CAACE,MAAM,KAAK,IAAI;EAExC;EAEA;;;EAGOC,kBAAkB;IACvB,MAAMzE,OAAO,GAAG,IAAI,CAACiC,UAAU,EAAE;IACjC,OAAOjC,OAAO,CAAC0E,SAAS;EAC1B;EAEA;;;EAGOC,4BAA4B;IACjC,IAAI,IAAI,CAACF,kBAAkB,EAAE,EAAE;MAC7B,IAAI,CAACvG,MAAM,CAAC+F,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEA;;;EAGOW,4BAA4B,CAACC,KAAa;IAC/C,OAAO,IAAI,CAAC1G,EAAE,CAAC2G,IAAI,CAAC,GAAG,IAAI,CAACZ,SAAS,CAAC,QAAQ,CAAC,uBAAuB,EAAE;MACtEW;KACD,CAAC;EACJ;EAEA;;;EAGOE,WAAW,CAACC,KAAa;IAC9BC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;EACpC;EAEA;;;EAGOG,WAAW;IAChB,OAAOF,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC;EACpC;EAEA;;;EAGOC,YAAY;IACjBJ,YAAY,CAACK,UAAU,CAAC,KAAK,CAAC;EAChC;EAEA;;;EAGOC,WAAW;IAChB,OAAO,IAAI,CAACJ,WAAW,EAAE,KAAK,IAAI;EACpC;EAEA;;;EAGOK,WAAW;IAChB,IAAI,IAAI,CAACrG,IAAI,KAAKE,SAAS,EAAE;MAC3B,OAAO,IAAI;;IAGb,IAAI,IAAI,CAACF,IAAI,CAACA,IAAI,KAAKE,SAAS,EAAE;MAChC,OAAO,IAAI;;IAGb,IAAI,IAAI,CAACF,IAAI,CAACA,IAAI,CAACK,IAAI,KAAKH,SAAS,EAAE;MACrC,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACF,IAAI,CAACA,IAAI,CAACK,IAAI,CAACiG,QAAQ;EACrC;EAEA;;;EAGOC,QAAQ;IACb,OAAO,IAAI,CAACF,WAAW,EAAE,KAAK,IAAI;EACpC;EAEA;;;EAGOG,QAAQ;IACb,OAAO,IAAI,CAACH,WAAW,EAAE,KAAK,IAAI;EACpC;EAEA;;;EAGOI,WAAW,CAACH,QAAgB;IACjC,MAAMI,MAAM,GAAG;MAACJ;IAAQ,CAAC;IACzB,IAAI,CAACtH,EAAE,CAAC2G,IAAI,CAAC,2BAA2B,EAAEe,MAAM,CAAC,CAAChH,SAAS,CAAEC,GAAQ,IAAI;MACvEL,MAAM,CAACM,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEA;;;EAGO8G,cAAc;IACnB,OAAO,IAAI,CAAC3G,IAAI,CAACA,IAAI,CAACK,IAAI,CAACA,IAAI,CAACuG,UAAU;EAC5C;EAEA;;;EAGOC,aAAa;IAClB,OAAO,IAAI,CAAC7G,IAAI,CAACA,IAAI,CAACK,IAAI,CAACA,IAAI,CAACyG,SAAS;EAC3C;EAEA;;;EAGOC,SAAS;IACd,OAAO,IAAI,CAAC/G,IAAI,CAACA,IAAI,CAACK,IAAI,CAACA,IAAI,CAACqF,KAAK;EACvC;EAEA;;;EAGOsB,mBAAmB;IACxB,IAAI,IAAI,CAAChH,IAAI,CAACA,IAAI,KAAKE,SAAS,EAAE;MAChC,OAAO,KAAK;;IAEd,OAAO,IAAI,CAACF,IAAI,CAACA,IAAI,CAACiH,UAAU;EAClC;EAEA;;;EAGO/D,gBAAgB;IACrB,IAAI,CAAChE,kBAAkB,CAACgI,UAAU,CAAC,OAAO,CAAC;EAC7C;EAEA;;;EAGO9D,iBAAiB;IACtB,IAAI,CAAClE,kBAAkB,CAACgI,UAAU,CAAC,QAAQ,CAAC;EAC9C;EAEA;;;EAGOC,0BAA0B;IAC/B,IAAI,CAACjI,kBAAkB,CAACgI,UAAU,CAAC,iBAAiB,CAAC;EACvD;EAEA;;;;EAIOE,UAAU,CAACvG,UAA+BX,SAAS;IACxD,MAAMmH,cAAc,GAAG;MACrBC,GAAG,EAAE;KACN;IAED,IAAIzG,OAAO,KAAKX,SAAS,EAAE;MACzBW,OAAO,GAAG,IAAI,CAACb,IAAI,CAACa,OAAO;;IAG7B,IAAIA,OAAO,KAAKX,SAAS,EAAE;MACzB;;IAGF,IAAIW,OAAO,CAAC0G,MAAM,KAAKrH,SAAS,IAAIW,OAAO,CAAC0G,MAAM,KAAK,IAAI,EAAE;MAC3D,OAAOF,cAAc;;IAEvB,OAAOxG,OAAO,CAAC0G,MAAM;EACvB;EAEA;;;EAGOC,aAAa,CAACD,MAAW;IAC9B,IAAI,CAACvH,IAAI,CAACa,OAAO,CAAC0G,MAAM,GAAGA,MAAM;EACnC;;SAtpBW1I,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAA4I,SAAX5I,MAAW;AAAA","names":["FormGroup","Subject","map","UserService","constructor","router","_h","l","switchModalService","first","second","success","window","userService","logout","get","subscribe","res","location","reload","not_is_authenticated","is_authenticated","data","data_is_loaded","undefined","belongToGroup","group","user","is_me","compareWith","value","indexOf","id","parseInt","is_professional","profile","get_my_group","is_creator","is_customer","is_staff","is_pro_or_creator","reset_data","data_loaded","set_data","stream","next","get_id","get_data","hasOwnProperty","get_my_profile_video","defaultVideoUrl","profile_video","video","get_in_user","key","drop_in_user","bind_change_data","componentOrService","list_component_update_data","push","send_event_change_data","bindChangeGlobalData","update_data","pipe","response","invitation","getSettings","settings","getProfile","get_profile_url","username","redirectToLogin__IfLogout","open_login_modal","redirectToSignup__IfLogout","open_signup_modal","hasProfilePicture","images","profile_picture","defaultPicture","split","splice","join","hasVideoProfile","type","hasVideoPriceConfigured","price","length","updateVideo","getSocialNetWorkIco","getSocialNetWorkUrl","social_network_list","index","findIndex","x","url","clickSocialNetWork","socialNetwork","substring","open","redirectToProfile","navigateByUrl","getApiKey","keyName","API","phoneNumberIsEmpty","phone_number","country_code","number","isAnonymousProfile","anonymous","notAccessForAnonymousProfile","strapiSendForgetPaswordEmail","email","post","setJwtToken","token","localStorage","setItem","getJwtToken","getItem","dropJwtToken","removeItem","hasJwtToken","getLanguage","language","langIsFr","langIsEn","setLanguage","params","get_first_name","first_name","get_last_name","last_name","get_email","profileHasOnboarded","onboarding","open_modal","open_forget_password_modal","get_avatar","default_avatar","src","avatar","update_avatar","factory"],"sourceRoot":"","sources":["/var/projects/base/ng-base/src/modules/profile/services/user.service.ts"],"sourcesContent":["import { Injectable, ɵɵgetInheritedFactory } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpService } from 'src/modules/tools/services/http.service';\nimport { LibsService } from 'src/modules/tools/services/libs.service';\nimport { SwitchModalService } from 'src/modules/modal/services/switch-modal.service';\n\nexport interface Avatar {\n  src: string,\n};\n\nexport interface Profile {\n  id: number,\n  avatar: Avatar,\n  group: string,\n  is_anonymous: boolean,\n  username: string,\n  first_name: string,\n  last_name: string,\n};\n\ninterface TP_userData {\n  success: boolean;\n}\n\n@Injectable()\nexport class UserService {\n  /**\n   * @description:\n   */\n  public stream: Subject<any> = new Subject();\n\n  public REDIRECT_ONBOARDING = true;\n\n\n  /*\n   * @description:\n   */\n  constructor(\n    private router: Router,\n    public _h: HttpService,\n    public l: LibsService,\n    public switchModalService: SwitchModalService,\n  )\n  {\n    (window as any).userService = this;\n    this._h.userService = this;\n  }\n\n  /*\n   * @description:\n   */\n  public registrationForm: any = {\n    first: FormGroup,\n    second: FormGroup,\n  };\n\n  /*\n   * @description:\n   */\n  public logout(): any { \n    this._h.get('v1/auth/logout/').subscribe((res: any) => {\n      window.location.reload();\n    });\n  }\n\n  /*\n   * @description:\n   */\n  public not_is_authenticated(): boolean {\n    return !this.is_authenticated();\n  }\n\n  /*\n   * @description:\n   */\n  public is_authenticated(): boolean {\n    return this.data.is_authenticated;\n  }\n\n  /**\n   * @description: \n   */\n  public data_is_loaded(): boolean {\n    return this.data.is_authenticated !== undefined;\n  }\n\n  /*\n   * @description:\n   */\n  public belongToGroup(group: any): boolean {\n    if (!this.is_authenticated()) {\n      return false;\n    }\n\n    return this.data.user.group === group;\n  }\n\n  /**\n   * @description:\n   */\n  public is_me(compareWith: string, value: any): boolean {\n    if (!this.is_authenticated()) {\n      return false;\n    }\n\n    if (\n      compareWith === 'id' &&\n      ['string', 'number'].indexOf(typeof value) !== -1 &&\n      this.data.user.id === parseInt(value, 0)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /*\n   * @description:\n   */\n  public is_professional(profile: any = null): boolean {\n    const group: any = this.get_my_group(profile);\n    return group === 'pro';\n  }\n\n  /*\n   * @description:\n   */\n  public is_creator(profile: any = null): boolean {\n    const group: any = this.get_my_group(profile);\n    return group === 'creator';\n  }\n\n  /*\n   * @description:\n   */\n  public is_customer(profile: any = null): boolean {\n    const group: any = this.get_my_group(profile);\n    return group !== null && group === 'customer';\n  }\n\n  /*\n   * @description:\n   */\n  public is_staff(profile: any = null): boolean {\n    const group: any = this.get_my_group(profile);\n    return group !== null && group === 'staff';\n  }\n\n  /*\n   * @description:\n   */\n  public is_pro_or_creator(profile: any = null): boolean {\n    const group: any = this.get_my_group(profile);\n    return (\n      (group !== null && this.is_creator(profile)) ||\n      this.is_professional(profile)\n    );\n  }\n\n  //############################ [GLOBAL-DATA-BEGIN]\n\n  /*\n   * @description:\n   */\n  public data: any = {\n    success: false,\n  };\n\n  /*\n   * @description:\n   */\n  public reset_data(): void {\n\n  } // Remettre l'element à null\n\n  /*\n   * @description:\n   */\n  public data_loaded(): boolean {\n    return this.data.success;\n  }\n\n  /*\n   * @description:\n   */\n  public set_data(data: any): void {\n    this.data = data;\n    if (data.data === null) {\n      return;\n    }\n\n    this.stream.next(data.user);\n  }\n\n  /*\n   * @description:\n   */\n  public get_id(): number {\n    let data = this.get_data();\n\n    if (!data.hasOwnProperty('user') || !data.user.hasOwnProperty('id')) {\n      return 0;\n    }\n    return data.user.id;\n  }\n\n  /*\n   * @description: Il s'agit ici de récupérer la video de ce profile\n   */\n  public get_my_profile_video(profile: any = null): string {\n    if (profile === null) {\n      profile = this.data.profile;\n    }\n    const defaultVideoUrl = '';\n    if (profile.profile_video !== undefined) {\n      return profile.profile_video.video;\n    }\n    return defaultVideoUrl;\n  }\n\n  /**\n   * @description:\n   */\n  public get_my_group(profile: any = null): string | undefined {\n    if (profile !== null) {\n      return profile.group;\n    }\n    if (!this.is_authenticated()) {\n      return undefined;\n    }\n    return this.data.profile.group;\n  }\n\n  /**\n   * @description:\n   */\n  public get_in_user(key: any): string | undefined {\n    const user = this.data.user;\n    if (user === undefined) {\n      return undefined;\n    }\n    if (!user.hasOwnProperty(key)) {\n      return undefined;\n    }\n    return user[key];\n  }\n\n  /**\n   * @description:\n   */\n  public drop_in_user(key: any): boolean {\n    if (this.data.user === undefined) {\n      return false;\n    }\n    if (this.data.user[key] === undefined) {\n      return false;\n    }\n    this.data.user[key] = undefined;\n    return true;\n  }\n\n  /**\n   * @description:\n   */\n  public change_settings_data: Subject<any> = new Subject();\n\n  /**\n   * @description:\n   */\n  public change_data: Subject<any> = new Subject();\n\n  /**\n   * @description:\n   */\n  public list_component_update_data: any[] = [];\n\n  /**\n   * @description:\n   */\n  public bind_change_data(componentOrService: any): void {\n    this.list_component_update_data.push(componentOrService);\n  }\n\n  /*\n   * @description:\n   */\n  public send_event_change_data() {\n    for (let componentOrService of this.list_component_update_data) {\n      if (!componentOrService.hasOwnProperty('bindChangeGlobalData')) {\n        continue;\n      }\n      componentOrService.bindChangeGlobalData();\n    }\n  }\n\n  /*\n   * @description:\n   */\n  public update_data() {\n    return this._h.get('v1/auth/me/').pipe(\n      map((response) => {\n        this.send_event_change_data();\n        this.set_data(response);\n        return response;\n      })\n    );\n  }\n\n  /*\n   * @description:\n   */\n  public get_data(): any {\n    const invitation = this.get_in_user('invitation');\n    if (invitation) {\n      this.drop_in_user('invitation');\n      // this.invitation.get_data(invitation, this.get_my_group());\n    }\n\n    return this.data;\n  }\n\n  /*\n   * @description:\n   */\n  public getSettings(): any {\n    return this.data.profile.settings;\n    // return {\n    //   'notification': {\n    //     'before_your_video_call': true,\n    //     'wishlist_activity': true,\n    //     'talkto_promotionnal_offer': true,\n    //   }\n    // };\n  }\n\n  /*\n   * @description: Récupérer le profile de cette personnes.\n   */\n  public getProfile(profile = null): any {\n    if (profile !== null) {\n      return profile;\n    }\n    return this.data.profile;\n  }\n\n  /*\n   * @description:\n   */\n  public get_profile_url(profile: any): string {\n    return `/profile/${profile.username}`;\n  }\n\n  /*\n   * @description: Si l'utilisateurs n'est pas connecter alors ont le redirige vers la pages de logins.\n   */\n  public redirectToLogin__IfLogout(): boolean {\n    if (this.is_authenticated()) {\n      return false;\n    }\n\n    this.open_login_modal();\n    return true;\n  }\n\n  /**\n   * @description: \n   */\n  public redirectToSignup__IfLogout(): boolean {\n    if (this.is_authenticated()) {\n      return false;\n    }\n    this.open_signup_modal();\n    return true;\n  }\n\n  /*\n   * @description: Permet de savoir si l'images est part défaut\n   */\n  public hasProfilePicture(profile = null): boolean {\n    profile = this.getProfile(profile);\n    const images: string = this.data.profile.profile_picture;\n    const defaultPicture: string = `assets/assets/img/user1.jpg`;\n\n    try {\n      return images.split('/').splice(-4).join('/') !== defaultPicture;\n    } catch {\n      return true;\n    }\n    return true;\n  }\n\n  /*\n   * @description: Regarde s'il y a une video de presentations.\n   */\n  public hasVideoProfile(profile: any = null): boolean {\n    profile = this.getProfile(profile);\n\n    if (profile.profile_video === undefined) {\n      return false;\n    }\n\n    if (\n      profile.profile_video.hasOwnProperty('type') &&\n      profile.profile_video.type === 'default'\n    ) {\n      return false;\n    }\n\n    // if (!profile.profile_video.cropped) {\n    //   return false;\n    // }\n    return true;\n  }\n\n  /*\n   * @description:\n   */\n  public hasVideoPriceConfigured(profile: any = null): boolean {\n    profile = this.getProfile(profile);\n    const price = profile.price;\n    return price.price.length !== 0;\n  }\n\n  /*\n   * @description:\n   */\n  public updateVideo(video: any): void {\n    this.data.profile.profile_video = video;\n  }\n\n  /*\n   * @description:\n   */\n  public getSocialNetWorkIco(): void {}\n\n  /*\n   * @description: Récupérer le bon réseaux social.\n   */\n  public getSocialNetWorkUrl(profile: any, key = `instagram`): string {\n    const social_network_list = profile.social_network_list;\n    const index = social_network_list.findIndex((x: any) => x.key === key);\n    if (index === -1) {\n      return ``;\n    }\n    return social_network_list[index].url;\n  }\n\n  /*\n   * @description:\n   */\n  public clickSocialNetWork(socialNetwork: any): void {\n    let url = socialNetwork.url;\n    if (url.substring(0, 4) !== 'http') {\n      url = `http://${url}`;\n    }\n    window.open(url, `_blank`, ``);\n  }\n\n  /*\n   * @description:\n   */\n  private openEmailValidator = false;\n\n  /*\n   * @description:\n   */\n  // public openEmailValidatorPage(): void {\n  //   if (this.openEmailValidator) {\n  //     return;\n  //   }\n\n  //   const profile = this.getProfile();\n  //   if (!profile.email_validate) {\n  //     this.openEmailValidator = true;\n  //     this.openCloseElementService.openEmailValidator();\n  //   }\n  // }\n\n  /*\n   * @description: Rediriger l'utilisateurs vers le profile qui lui est lier.\n   */\n  public redirectToProfile(profile: any): void {\n    if (!this.is_pro_or_creator(profile)) {\n      return;\n    }\n    this.l.navigateByUrl(profile.username);\n  }\n\n  /*\n   * @description:\n   */\n  public getApiKey(keyName: string): any {\n    if (this.data.API.hasOwnProperty(keyName)) {\n      return this.data.API[keyName];\n    }\n    return undefined;\n  }\n\n  /*\n   * @description:\n   */\n  public phoneNumberIsEmpty(): boolean {\n    const profile = this.getProfile();\n    return (\n      profile.phone_number.country_code === null ||\n      profile.phone_number.number === null\n    );\n  }\n\n  /*\n   * @description:\n   */\n  public isAnonymousProfile(): boolean {\n    const profile = this.getProfile();\n    return profile.anonymous;\n  }\n\n  /*\n   * @description:\n   */\n  public notAccessForAnonymousProfile(): boolean {\n    if (this.isAnonymousProfile()) {\n      this.router.navigateByUrl(`/`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description:\n   */\n  public strapiSendForgetPaswordEmail(email: string): Observable<any> {\n    return this._h.post(`${this.getApiKey('strapi')}/auth/forgot-password`, {\n      email,\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public setJwtToken(token: string): void {\n    localStorage.setItem('jwt', token);\n  }\n\n  /**\n   * @description:\n   */\n  public getJwtToken(): string | null {\n    return localStorage.getItem('jwt');\n  }\n\n  /**\n   * @description:\n   */\n  public dropJwtToken(): void {\n    localStorage.removeItem('jwt');\n  }\n\n  /**\n   * @description:\n   */\n  public hasJwtToken(): boolean {\n    return this.getJwtToken() !== null;\n  }\n\n  /**\n   * @description:\n   */\n  public getLanguage(): 'en' | 'fr' {\n    if (this.data === undefined) {\n      return 'en';\n    }\n\n    if (this.data.data === undefined) {\n      return 'en';\n    }\n\n    if (this.data.data.user === undefined) {\n      return 'en';\n    }\n\n    return this.data.data.user.language;\n  }\n\n  /**\n   * @description:\n   */\n  public langIsFr(): boolean {\n    return this.getLanguage() === 'fr';\n  }\n\n  /**\n   * @description:\n   */\n  public langIsEn(): boolean {\n    return this.getLanguage() === 'en';\n  }\n\n  /**\n   * @description:\n   */\n  public setLanguage(language: string): void {\n    const params = {language};\n    this._h.post(`profiles/change_language/`, params).subscribe((res: any) => {\n      window.location.reload();\n    });\n  }\n\n  /**\n   * @description:\n   */\n  public get_first_name(): string {\n    return this.data.data.user.user.first_name;\n  }\n\n  /**\n   * @description:\n   */\n  public get_last_name(): string {\n    return this.data.data.user.user.last_name;\n  }\n\n  /**\n   * @description:\n   */\n  public get_email(): string {\n    return this.data.data.user.user.email;\n  }\n\n  /**\n   * @description:  \n   */\n  public profileHasOnboarded(): boolean {\n    if (this.data.data === undefined) {\n      return false;\n    }\n    return this.data.data.onboarding;\n  }\n\n  /**\n   * @description:\n   */\n  public open_login_modal() {\n    this.switchModalService.open_modal('login');\n  }\n\n  /**\n   * @description: \n   */\n  public open_signup_modal() {\n    this.switchModalService.open_modal('signup');\n  }\n\n  /**\n   * @description:\n   */\n  public open_forget_password_modal() {\n    this.switchModalService.open_modal('forget_password');\n  }\n\n  /**\n   * @description:\n   * @param.profile \n   */\n  public get_avatar(profile: Profile | undefined = undefined): any {\n    const default_avatar = {\n      src: 'assets/assets/img/user1.jpg',\n    };\n  \n    if (profile === undefined) {\n      profile = this.data.profile;\n    } \n\n    if (profile === undefined) {\n      return; \n    }\n\n    if (profile.avatar === undefined || profile.avatar === null) {\n      return default_avatar;\n    }\n    return profile.avatar;\n  }\n\n  /**\n   * @description: \n   */\n  public update_avatar(avatar: any) {\n    this.data.profile.avatar = avatar;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}